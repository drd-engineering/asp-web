@using DRD.Domain;
@model JsonLayout

@{
    Layout = null;
}

<!-- Global stylesheets -->
<link href="https://fonts.googleapis.com/css?family=Roboto:400,300,100,500,700,900" rel="stylesheet" type="text/css">
<link href="/assets/css/icons/icomoon/styles.css" rel="stylesheet" type="text/css">
<link href="/assets/css/bootstrap.css" rel="stylesheet" type="text/css">
<link href="/assets/css/core.css" rel="stylesheet" type="text/css">
<link href="/assets/css/components.css" rel="stylesheet" type="text/css">
<link href="/assets/css/colors.css" rel="stylesheet" type="text/css">
<!-- /global stylesheets -->

<script type="text/javascript" src="/assets/js/plugins/loaders/pace.min.js"></script>
<script type="text/javascript" src="/assets/js/core/libraries/jquery.min.js"></script>
<script type="text/javascript" src="/assets/js/core/libraries/bootstrap.min.js"></script>
<script type="text/javascript" src="/assets/js/plugins/loaders/blockui.min.js"></script>

<script src="/assets/vendors/angular-1.5.5/angular.js"></script>
<script src="/assets/vendors/angular-1.5.5/angular-animate.js"></script>
<script src="/Scripts/ui-bootstrap-tpls-1.3.2.js"></script>

<script src="/assets/vendors/file-upload/ng-file-upload-shim.min.js"></script> <!-- for no html5 browsers support -->
<script src="/assets/vendors/file-upload/ng-file-upload.min.js"></script>
<script src="/assets/vendors/ng_only_number.js"></script>


<script type="text/javascript" src="/assets/js/plugins/notifications/bootbox.min.js"></script>
<script type="text/javascript" src="/assets/js/plugins/notifications/sweet_alert.min.js"></script>


<script src="/Scripts/flow/svg-path/leader-line.min.js"></script>
@*<script src="/Scripts/flow/svg-path/anim-event.min.js"></script>
    <script src="/Scripts/flow/svg-path/in-view.min.js"></script>*@
<script src="/Scripts/flow/svg-path/plain-draggable.min.js"></script>

@*<script src="/Scripts/flow/required/script/jquery.connectingLine.js" type="text/javascript"></script>*@
<script src="/Scripts/flow/scripts/jquery-ui-1.10.4.custom.min.js" type="text/javascript"></script>
@*<script src="/assets/vendors/context-menu3/contextMenu.js"></script>*@

<script type="text/javascript" src="/assets/js/core/app.js"></script>
<script type="text/javascript" src="/assets/js/pages/components_popups.js"></script>

<script src="~/Scripts/xpublic.js"></script>
<link href="~/Scripts/xflow/xdiagram.css" rel="stylesheet" type="text/css">

<script src="/Scripts/contextMenu/jquery.contextMenu.js" type="text/javascript"></script>
<link href="/Scripts/contextMenu/jquery.contextMenu.css" rel="stylesheet" type="text/css" />

<body ng-app="drdApp">
    <!-- Page container -->
    <div id="mainController" class="page-container" ng-controller="drdController">
        <button class="btn bg-slate-700" ng-click="addNodeActivity(0,0)">
            <span class="ladda-label">&nbsp;&nbsp;Add Node&nbsp;&nbsp;</span>
        </button>
        <button class="btn bg-slate-700" ng-click="addNodeDecision(0,0)">
            <span class="ladda-label">&nbsp;&nbsp;Add Decision&nbsp;&nbsp;</span>
        </button>
        <button class="btn bg-slate-700" ng-click="addNodeCase(0,0)">
            <span class="ladda-label">&nbsp;&nbsp;Add Case&nbsp;&nbsp;</span>
        </button>
        <button class="btn bg-slate-700" ng-click="addNodePararrel(0,0)">
            <span class="ladda-label">&nbsp;&nbsp;Add Pararrel&nbsp;&nbsp;</span>
        </button>
        <button class="btn bg-slate-700" ng-click="submitFlow()">
            <span class="ladda-label">&nbsp;&nbsp;Submit&nbsp;&nbsp;</span>
        </button>
        <div id="canvas" class="canvas" @*context-menu-one*@ onscroll="canvasScroll()" ng-click="releaseAllSelected()">

            <div id="node-activity-xx" class="node-activity-yy" style="display:none">
                <div id="node-activity-caption-xx" class="node-activity-caption-yy">
                    <span id="title-activity-xx" class="title-activity" onclick="popupActivity('title-activity-xx')">Activity</span>
                    <i class="icon-cross3 pull-right" onclick="removeActivityConfirmation('-xx-')"></i>
                    <i class="icon-loop4 pull-right" onclick="selectLink('node-activity-xx')"></i>
                    <i id="info-activity-xx" class="icon-info22 pull-right" data-popup="popover" data-trigger="hover" data-content=""></i>
                </div>
                <div class="node-activity-content-yy">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:50px;"><img id="photo-profile-xx" src="/Images/Member/icon_user.png" height="45" style="cursor:pointer;border-radius:10%;" onclick="lookupReceipent('-xx-')" /></td>
                            <td>
                                <span id="member-number-xx" class="text-format"></span><br />
                                <span id="member-name-xx" class="text-format">Receipent</span><br />
                                <span id="member-email-xx" class="text-format"></span><br />
                            </td>
                        </tr>
                    </table>
                    <input id="member-id-xx" value="0" style="display:none" />
                </div>
                <div class="footer-yy">
                    <div id="reject-xx" class="join con-reject"></div>
                    <div id="submit-xx" class="join con-submit"></div>
                    <div id="revisi-xx" class="join con-revisi"></div>
                    <div id="alter-xx" class="join con-alter"></div>
                </div>
            </div>

            <div id="node-decision-xx" class="node-decision-yy" style="display:none">
                <div id="node-decision-caption-xx" class="node-decision-caption-yy">
                    <span id="title-decision-xx" class="title-decision" onclick="popupDecision('title-decision-xx')">Decision</span>
                    <i class="icon-cross3 pull-right" onclick="removeDecisionConfirmation('-xx-')"></i>
                    <i class="icon-loop4 pull-right" onclick="selectLink('node-decision-xx')"></i>
                    <i id="info-decision-xx" class="icon-info22 pull-right" data-popup="popover" data-trigger="hover" data-content=""></i>
                </div>
                <div class="node-decision-content-yy">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:50px;"><img id="photo-profile-xx" src="~/Images/decision.png" height="45" style="border-radius:10%;" /></td>
                            <td>
                                <span id="decision-descr-xx" class="text-format">value>=0</span><br />
                            </td>
                        </tr>
                    </table>
                    <input id="decision-operator-xx" value=">=" style="display:none" />
                    <input id="decision-value-xx" value="0" style="display:none" />
                </div>
                <div class="footer-yy">
                    <div id="no-xx" class="join con-no"></div>
                    <div id="yes-xx" class="join con-yes"></div>
                </div>
            </div>

            <div id="node-case-xx" class="node-case-yy" style="display:none">
                <div id="node-case-caption-xx" class="node-case-caption-yy">
                    <span id="title-case-xx" class="title-case" onclick="popupCase('title-case-xx')">Case</span>
                    <i class="icon-cross3 pull-right" onclick="removeCaseConfirmation('-xx-')"></i>
                    <i class="icon-loop4 pull-right" onclick="selectLink('node-case-xx')"></i>
                    <i id="info-case-xx" class="icon-info22 pull-right" data-popup="popover" data-trigger="hover" data-content=""></i>
                </div>
                <div class="node-case-content-yy">
                    <table style="width:100%;">
                        <tr>
                            <td style="width:50px;"><img id="photo-profile-xx" src="~/Images/decision.png" height="45" style="border-radius:10%;" /></td>
                            <td>
                                <span id="case-descr-xx" class="text-format">Expression</span><br />
                            </td>
                        </tr>
                    </table>
                </div>
                <div class="footer-yy">
                    <div id="submit-case-xx" class="join con-submit-case"></div>
                </div>
            </div>

            <div id="node-pararrel-xx" class="node-pararrel-yy" style="display:none">
                <div class="header">
                    <i class="icon-cross3" onclick="removePararrelConfirmation('-xx-')"></i>
                </div>
                <span id="title-pararrel-xx" class="text-format">Pararrel</span>
                <div class="footer" style="bottom:2px">
                    <div id="submit-pararrel-xx" class="join con-submit-pararrel"></div>
                </div>
            </div>

            <div id="start-0" class="terminator start">
                <span id="title-start-0" class="text-format">Start</span>
                <div class="footer" style="bottom:2px">
                    <div id="submit-start" class="join con-submit"></div>
                </div>
            </div>

            <div id="end-1" class="terminator end">
                <span id="title-end-1" class="text-format">End</span>
            </div>
        </div>
        <!-- View member modal -->
        <ng-include src="'/Include/PopupMember'"></ng-include>
        <ng-include src="'/Include/PopupActivity'"></ng-include>
        <ng-include src="'/Include/PopupDecision'"></ng-include>
        <ng-include src="'/Include/PopupCase'"></ng-include>
        <ng-include src="'/Include/PopupLinkCase'"></ng-include>
        <ng-include src="'/Include/PopupLinkAlter'"></ng-include>
        <!-- View member modal -->
    </div>
    <!-- /Page container -->

    <script type="text/javascript">


        var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap', 'ngFileUpload', 'ngOnlyNumberApp'])//, 'ui.bootstrap.contextMenu'])

        myApp.controller("drdController", function ($scope, Upload, $location, $http, $filter) {



            // modal member
            $scope.member = {};
            $scope.members = [];
            $scope.memberCount = [];
            $scope.paging = [];
            $scope.kriteria = "";
            $scope.page = 1;
            $scope.row = 20;
            $scope.currPage = 0;
            $scope.index = 0;
            // modal member


            $scope.nodeItem = { element: '', memberId: 0, symbolCode: '', caption: '', info: '', operator: '', value: 0, textColor: '', backColor: '', posleft: 0, postop: 0, width: 0, height: 0 };
            $scope.nodes = [];
            $scope.linkItem = { elementFrom: '', elementTo: '', symbolCode: '', caption: '', operator: '', value: 0, alterPeriod: 0, alterPeriodUnit: 'HOUR', line: {} };
            $scope.links = [];
            $scope.inode = 0;
            $scope.elmActivityName = "node-activity";
            $scope.elmTitleName = "title-activity";
            $scope.elmDecisionName = "node-decision";
            $scope.elmCaseName = "node-case";
            $scope.elmPararrelName = "node-pararrel";

            $scope.linkTypeSubmit = "straight";
            $scope.linkTypeRevisi = "grid";
            $scope.linkTypeReject = "fluid";
            $scope.linkTypeAlter = "straight";
            $scope.linkTypeYes = "grid";
            $scope.linkTypeNo = "grid";
            $scope.linkTypeSubmitCase = "grid";

            $scope.linkColorSubmit = "black";
            $scope.linkColorReject = "red";
            $scope.linkColorRevisi = "chocolate";
            $scope.linkColorAlter = "dodgerblue";
            $scope.linkColorYes = "green";
            $scope.linkColorNo = "red";
            $scope.linkColorSubmitCase = "darkgrey";

            $scope.selectedLinkNodeNo = -1;
            $scope.selectedLinkNo = -1;
            $scope.selectedLinkNoIdx = -1;

            $scope.activity = {};
            $scope.decision = {};
            $scope.case = {};
            $scope.linkcase = { Value: 0, Operator: '=' };
            $scope.linkalter = { Period: 0, PeriodUnit: 'HOUR' };

            $scope.operators = [{ Id: 0, Descr: '<' }, { Id: 1, Descr: '>' }, { Id: 2, Descr: '=' }, { Id: 3, Descr: '<=' }, { Id: 4, Descr: '>=' }, { Id: 5, Descr: '<>' }, { Id: 6, Descr: 'ELSE' }];
            $scope.periods = [{ Id: 0, Descr: 'HOUR' }, { Id: 1, Descr: 'DAY' }];
            $scope.decision.Operator = "";
            /*--------------------------------------------------------------
            INIT DATA
            --------------------------------------------------------------*/
            angular.element(document).ready(function () {
                $scope.initTerminator();
            });

            function initValues() {

            }

            $scope.initData = function () {

            }

            $scope.initTerminator = function () {

                var line = new LeaderLine(
                    document.getElementById('start-0'),
                    document.getElementById('submit-start'),
                    {
                        endPlug: 'behind',
                        hide: true,
                        path: $scope.linkTypeSubmit,
                        dash: { animation: true },
                        size: 2,
                        color: $scope.linkColorSubmit,
                    });

                $("#start-0").draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });
                $("#submit-start").draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        line.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        line.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";

                    }
                });

                $scope.addNode('start-0', 'START', 'Start');

                $("#end-1").droppable({
                    drop: function (event, ui) {
                        var fromIdx = $scope.getIndex(ui.draggable.context.id);
                        var from = document.getElementById($scope.elmActivityName + "-" + fromIdx);
                        var to = document.getElementById("end-1");
                        if (ui.draggable.context.id == 'submit-' + fromIdx) {
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, "end-1", "SUBMIT", "", line);
                        } else if (ui.draggable.context.id == 'reject-' + fromIdx) {
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', size: 2, color: $scope.linkColorReject,
                                            path: $scope.linkTypeReject,
                                            startLabel: LeaderLine.pathLabel({ text: 'Reject', color: $scope.linkColorReject, fontSize: '8pt', }),
                                            hoverStyle: { color: 'white' }
                                        });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, "end-1", "REJECT", "Reject", line);
                        }
                    },

                });

                $("#end-1").draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });

                $scope.addNode('end-1', 'END', 'End');
            }

            $scope.initActivity = function (idNo) {
                var activityId = $scope.elmActivityName + "-" + idNo;
                var submitId = "submit-" + idNo;
                var rejectId = "reject-" + idNo;
                var revisiId = "revisi-" + idNo;
                var alterId = "alter-" + idNo;

                var activity = document.getElementById(activityId);
                var submit = document.getElementById(submitId);
                var reject = document.getElementById(rejectId);
                var revisi = document.getElementById(revisiId);
                var alter = document.getElementById(alterId);

                var
                lineSubmit = new LeaderLine(activity, submit, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorSubmit,
                }),
                lineReject = new LeaderLine(activity, reject, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorReject,
                }),
                lineRevisi = new LeaderLine(activity, revisi, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorRevisi,
                }),
                lineAlter = new LeaderLine(activity, alter, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorAlter,
                });

                $("#" + submitId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineSubmit.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineSubmit.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });
                $("#" + rejectId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineReject.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineReject.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });
                $("#" + revisiId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineRevisi.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineRevisi.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });
                $("#" + alterId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineAlter.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineAlter.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });

                $("#" + activityId).droppable({
                    drop: function (event, ui) {
                        var fromIdx = $scope.getIndex(ui.draggable.context.id);
                        var from = document.getElementById($scope.elmActivityName + "-" + fromIdx);
                        var to = document.getElementById($scope.elmActivityName + "-" + idNo);
                        if (ui.draggable.context.id == 'submit-start') {
                            from = document.getElementById("start-0");
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink("start-0", $scope.elmActivityName + "-" + idNo, "SUBMIT", "", line);
                        } else if (ui.draggable.context.id == 'submit-' + fromIdx) {
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "SUBMIT", "", line);
                        } else if (ui.draggable.context.id == 'reject-' + fromIdx) {
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeReject, size: 2, color: $scope.linkColorReject,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Reject', color: $scope.linkColorReject, fontSize: '8pt', }),
                                            hoverStyle: { color: 'white' }
                                        });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "REJECT", "Reject", line);
                        } else if (ui.draggable.context.id == 'revisi-' + fromIdx) {
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeRevisi, size: 2, color: $scope.linkColorRevisi,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Revision', color: $scope.linkColorRevisi, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "REVISI", "Revisi", line);

                        } else if (ui.draggable.context.id == 'alter-' + fromIdx) {
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeAlter, size: 2, color: $scope.linkColorAlter,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Period?', color: $scope.linkColorAlter, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "ALTER", "Alter", line);

                        } else if (ui.draggable.context.id == 'submit-case-' + fromIdx) {
                            from = document.getElementById($scope.elmCaseName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeSubmitCase, size: 2, color: $scope.linkColorSubmitCase,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Expression?', color: $scope.linkColorSubmitCase, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmCaseName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "SUBMITCASE", "Case", line);

                        } else if (ui.draggable.context.id == 'yes-' + fromIdx) {
                            from = document.getElementById($scope.elmDecisionName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeYes, size: 2, color: $scope.linkColorYes,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Yes', color: $scope.linkColorYes, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmDecisionName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "YES", "Yes", line);
                        } else if (ui.draggable.context.id == 'no-' + fromIdx) {
                            from = document.getElementById($scope.elmDecisionName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeNo, size: 2, color: $scope.linkColorNo,
                                            middleLabel: LeaderLine.pathLabel({ text: 'No', color: $scope.linkColorNo, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmDecisionName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "NO", "No", line);
                        } else if (ui.draggable.context.id == 'submit-pararrel-' + fromIdx) {
                            from = document.getElementById($scope.elmPararrelName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit,
                                            middleLabel: LeaderLine.pathLabel({ color: $scope.linkColorSubmit })
                                        });
                            $scope.addLink($scope.elmPararrelName + "-" + fromIdx, $scope.elmActivityName + "-" + idNo, "NO", "No", line);
                        }
                    },

                });

                $("#" + activityId).draggable({
                    //cancel: " .title-activity",
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });

                $("#" + activityId).resizable({
                    resize: function (event, ui) {
                        $scope.refreshLines()
                    },
                });
            }

            $scope.initDecision = function (idNo) {
                var activityId = $scope.elmDecisionName + "-" + idNo;
                var yesId = "yes-" + idNo;
                var noId = "no-" + idNo;

                var activity = document.getElementById(activityId);
                var yes = document.getElementById(yesId);
                var no = document.getElementById(noId);

                var
                lineYes = new LeaderLine(activity, yes, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorYes,
                }),
                lineNo = new LeaderLine(activity, no, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorNo,
                });

                $("#" + yesId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineYes.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineYes.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });
                $("#" + noId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineNo.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineNo.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });


                $("#" + activityId).droppable({
                    drop: function (event, ui) {
                        var fromIdx = $scope.getIndex(ui.draggable.context.id);
                        var from;
                        var to = document.getElementById($scope.elmDecisionName + "-" + idNo);
                        if (ui.draggable.context.id == 'submit-' + fromIdx) {
                            from = document.getElementById($scope.elmActivityName + "-" + fromIdx);
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmDecisionName + "-" + idNo, "SUBMIT", "", line);
                        } else if (ui.draggable.context.id == 'yes-' + fromIdx) {
                            from = document.getElementById($scope.elmDecisionName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeYes, size: 2, color: $scope.linkColorYes,
                                            middleLabel: LeaderLine.pathLabel({ text: 'Yes', color: $scope.linkColorYes, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmDecisionName + "-" + fromIdx, $scope.elmDecisionName + "-" + idNo, "YES", "Yes", line);
                        } else if (ui.draggable.context.id == 'no-' + fromIdx) {
                            from = document.getElementById($scope.elmDecisionName + "-" + fromIdx);
                            var line = new LeaderLine(
                                    from, to,
                                        {
                                            endPlug: 'arrow1', path: $scope.linkTypeNo, size: 2, color: $scope.linkColorNo,
                                            middleLabel: LeaderLine.pathLabel({ text: 'No', color: $scope.linkColorNo, fontSize: '8pt' })
                                        });
                            $scope.addLink($scope.elmDecisionName + "-" + fromIdx, $scope.elmDecisionName + "-" + idNo, "NO", "No", line);
                        }
                    },

                });

                $("#" + activityId).draggable({
                    //cancel: " .title-decision",
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });

                $("#" + activityId).resizable({
                    resize: function (event, ui) {
                        $scope.refreshLines()
                    },
                });
            }

            $scope.initCase = function (idNo) {
                var activityId = $scope.elmCaseName + "-" + idNo;
                var submitId = "submit-case-" + idNo;

                var activity = document.getElementById(activityId);
                var submit = document.getElementById(submitId);

                var
                lineSubmit = new LeaderLine(activity, submit, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorSubmitCase,
                });


                $("#" + submitId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineSubmit.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineSubmit.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });


                $("#" + activityId).droppable({
                    drop: function (event, ui) {
                        var fromIdx = $scope.getIndex(ui.draggable.context.id);
                        var from;
                        var to = document.getElementById($scope.elmCaseName + "-" + idNo);
                        if (ui.draggable.context.id == 'submit-' + fromIdx) {
                            from = document.getElementById($scope.elmActivityName + "-" + fromIdx);
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmCaseName + "-" + idNo, "SUBMIT", "", line);
                        }
                    },

                });

                $("#" + activityId).draggable({
                    //cancel: " .title-decision",
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });

                $("#" + activityId).resizable({
                    resize: function (event, ui) {
                        $scope.refreshLines()
                    },
                });
            }

            $scope.initPararrel = function (idNo) {
                var activityId = $scope.elmPararrelName + "-" + idNo;
                var submitId = "submit-pararrel-" + idNo;

                var activity = document.getElementById(activityId);
                var submit = document.getElementById(submitId);

                var
                lineSubmit = new LeaderLine(activity, submit, {
                    endPlug: 'behind',
                    hide: true,
                    path: 'straight',
                    dash: { animation: true },
                    size: 2,
                    color: $scope.linkColorSubmit,
                });


                $("#" + submitId).draggable({
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        lineSubmit.position().show();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) {
                        lineSubmit.hide('none');
                        event.target.style.left = "";
                        event.target.style.top = "";
                    }
                });


                $("#" + activityId).droppable({
                    drop: function (event, ui) {
                        var fromIdx = $scope.getIndex(ui.draggable.context.id);
                        var from;
                        var to = document.getElementById($scope.elmPararrelName + "-" + idNo);
                        if (ui.draggable.context.id == 'submit-' + fromIdx) {
                            from = document.getElementById($scope.elmActivityName + "-" + fromIdx);
                            var line = new LeaderLine(from, to, { endPlug: 'arrow1', path: $scope.linkTypeSubmit, size: 2, color: $scope.linkColorSubmit, fontSize: '8pt' });
                            $scope.addLink($scope.elmActivityName + "-" + fromIdx, $scope.elmPararrelName + "-" + idNo, "SUBMIT", "", line);
                        }
                    },

                });

                $("#" + activityId).draggable({
                    //cancel: " .title-decision",
                    create: function (event, ui) { },
                    drag: function (event, ui) {
                        $scope.refreshLines();
                    },
                    start: function (event, ui) { },
                    stop: function (event, ui) { }
                });


            }

            $scope.refreshLines = function () {
                for (i = 0; i < $scope.links.length; i++) {
                    $scope.links[i].line.position().show();
                }
            }
            $scope.refreshLine = function (idx) {
                $scope.links[idx].line.position().show();
            }

            $scope.addNodeActivity = function (left, top) {
                var canvas = document.getElementById('canvas');

                var html = document.getElementById($scope.elmActivityName + "-xx").outerHTML;
                html = html.replace(/-xx-/g, $scope.inode);
                html = html.replace(/-xx/g, "-" + $scope.inode);
                html = html.replace(/-yy/g, "");
                $("#canvas").append(html);

                var newDiv = document.getElementById($scope.elmActivityName + "-" + $scope.inode);
                newDiv.style.display = "";
                newDiv.style.left = left;
                newDiv.style.top = top;

                $scope.initActivity($scope.inode);

                $scope.addNode($scope.elmActivityName + '-' + $scope.inode, 'ACTIVITY', 'Activity');
                // Popover
                $('[data-popup="popover"]').popover();
                // Tooltip
                $('[data-popup="tooltip"]').tooltip();
            }

            $scope.addNodeDecision = function (left, top) {
                var canvas = document.getElementById('canvas');

                var html = document.getElementById($scope.elmDecisionName + "-xx").outerHTML;
                html = html.replace(/-xx-/g, $scope.inode);
                html = html.replace(/-xx/g, "-" + $scope.inode);
                html = html.replace(/-yy/g, "");
                $("#canvas").append(html);

                var newDiv = document.getElementById($scope.elmDecisionName + "-" + $scope.inode);
                newDiv.style.display = "";
                newDiv.style.left = left;
                newDiv.style.top = top;

                $scope.initDecision($scope.inode);

                $scope.addNode($scope.elmDecisionName + '-' + $scope.inode, 'DECISION', 'Decision');
                // Popover
                $('[data-popup="popover"]').popover();
                // Tooltip
                $('[data-popup="tooltip"]').tooltip();
            }

            $scope.addNodeCase = function (left, top) {
                var canvas = document.getElementById('canvas');

                var html = document.getElementById($scope.elmCaseName + "-xx").outerHTML;
                html = html.replace(/-xx-/g, $scope.inode);
                html = html.replace(/-xx/g, "-" + $scope.inode);
                html = html.replace(/-yy/g, "");
                $("#canvas").append(html);

                var newDiv = document.getElementById($scope.elmCaseName + "-" + $scope.inode);
                newDiv.style.display = "";
                newDiv.style.left = left;
                newDiv.style.top = top;

                $scope.initCase($scope.inode);

                $scope.addNode($scope.elmCaseName + '-' + $scope.inode, 'CASE', 'Case');
                // Popover
                $('[data-popup="popover"]').popover();
                // Tooltip
                $('[data-popup="tooltip"]').tooltip();
            }

            $scope.addNodePararrel = function (left, top) {
                var canvas = document.getElementById('canvas');

                var html = document.getElementById($scope.elmPararrelName + "-xx").outerHTML;
                html = html.replace(/-xx-/g, $scope.inode);
                html = html.replace(/-xx/g, "-" + $scope.inode);
                html = html.replace(/-yy/g, "");
                $("#canvas").append(html);

                var newDiv = document.getElementById($scope.elmPararrelName + "-" + $scope.inode);
                newDiv.style.display = "";
                newDiv.style.left = left;
                newDiv.style.top = top;

                $scope.initPararrel($scope.inode);

                $scope.addNode($scope.elmPararrelName + '-' + $scope.inode, 'PARARREL', 'Pararrel');
                // Popover
                $('[data-popup="popover"]').popover();
                // Tooltip
                $('[data-popup="tooltip"]').tooltip();
            }

            $scope.addNode = function (elm, sym, cap) {
                var node = angular.copy($scope.nodeItem);
                node.element = elm;
                node.symbolCode = sym;
                node.caption = cap;
                $scope.nodes.push(node);

                $scope.inode++;
            }

            $scope.addLink = function (elmFrom, elmTo, sym, cap, line) {
                var link = angular.copy($scope.linkItem);
                if (sym != 'ALTER')
                    link.alterPeriodUnit = "";
                link.elementFrom = elmFrom;
                link.elementTo = elmTo;
                link.symbolCode = sym;
                link.caption = cap;
                link.line = line;
                $scope.links.push(link);
            }

            $scope.removeActivity = function (idx) {
                $scope.removeNode($scope.elmActivityName + "-" + idx);
            }

            $scope.removeDecision = function (idx) {
                $scope.removeNode($scope.elmDecisionName + "-" + idx);
            }

            $scope.removeCase = function (idx) {
                $scope.removeNode($scope.elmCaseName + "-" + idx);
            }

            $scope.removePararrel = function (idx) {
                $scope.removeNode($scope.elmPararrelName + "-" + idx);
            }

            $scope.removeNode = function (elmName) {
                $("#" + elmName).remove();

                for (i = $scope.links.length - 1; i >= 0; i--) {
                    if ($scope.links[i].elementFrom == elmName || $scope.links[i].elementTo == elmName) {
                        $scope.links[i].line.remove();
                        $scope.links.splice(i, 1);
                    }
                }
                $scope.refreshLines();
            }

            $scope.removeActivityConfirmation = function (idx) {
                swal({
                    title: "Confirmation",
                    text: "This node will be deleted, are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plx!",
                },
                function (isConfirm) {
                    //setTimeout(function () {
                    if (isConfirm)
                        $scope.removeActivity(idx);

                    swal.close();
                    //}, 500);

                });
            }

            $scope.removeDecisionConfirmation = function (idx) {
                swal({
                    title: "Confirmation",
                    text: "This node will be deleted, are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plx!",
                },
                function (isConfirm) {
                    //setTimeout(function () {
                    if (isConfirm)
                        $scope.removeDecision(idx);

                    swal.close();
                    //}, 500);

                });
            }

            $scope.removeCaseConfirmation = function (idx) {
                swal({
                    title: "Confirmation",
                    text: "This case node will be deleted, are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plx!",
                },
                function (isConfirm) {
                    //setTimeout(function () {
                    if (isConfirm)
                        $scope.removeCase(idx);

                    swal.close();
                    //}, 500);

                });
            }

            $scope.removePararrelConfirmation = function (idx) {
                swal({
                    title: "Confirmation",
                    text: "This pararrel node will be deleted, are you sure?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true,
                    confirmButtonText: "Yes, delete it!",
                    cancelButtonText: "No, cancel plx!",
                },
                function (isConfirm) {
                    //setTimeout(function () {
                    if (isConfirm)
                        $scope.removePararrel(idx);

                    swal.close();
                    //}, 500);

                });
            }

            $scope.clearDiagram = function () {
                for (i = $scope.links.length - 1; i >= 0; i--) {
                    $scope.links[i].line.remove();
                    $scope.links.splice(i, 1);
                }
                for (i = $scope.nodes.length - 1; i >= 0; i--) {
                    $("#" + $scope.nodes[i].element).remove();
                    $scope.nodes.splice(i, 1);
                }
            }

            $scope.selectByMe = false;
            $scope.selectLink = function (elm) {
                if ($scope.links.length == 0)
                    return;

                $scope.selectByMe = true;

                var idx = $scope.getIndex(elm);

                if ($scope.selectedLinkNoIdx != -1)
                    $scope.links[$scope.selectedLinkNoIdx].line.setOptions({ size: 2, dash: false });

                var idxs = [];
                for (i = 0; i < $scope.links.length; i++) {
                    if ($scope.links[i].elementFrom == elm || $scope.links[i].elementTo == elm)
                        idxs.push(i);
                }

                if ($scope.selectedLinkNodeNo != idx) {
                    $scope.selectedLinkNo = -1;
                    $scope.selectedLinkNodeNo = idx;
                }

                $scope.selectedLinkNo++;
                if ($scope.selectedLinkNo >= idxs.length)
                    $scope.selectedLinkNo = 0;

                i = idxs[$scope.selectedLinkNo];
                if (i != undefined) {
                    $scope.links[i].line.setOptions({ size: 4, dash: { animation: true } });
                    $scope.selectedLinkNoIdx = i;
                }

            }

            $scope.releaseAllSelected = function () {
                if ($scope.selectedLinkNoIdx != -1 && !$scope.selectByMe) {
                    $scope.links[$scope.selectedLinkNoIdx].line.setOptions({ size: 2, dash: false });
                    $scope.selectedLinkNoIdx = -1;
                    $scope.selectedLinkNo = -1;
                    $scope.selectedLinkNodeNo = -1;
                }
                $scope.selectByMe = false;
            }

            $("html").keypress(function (e) {
                if (e.key == 'x' || e.key == 'X') {
                    if ($scope.selectedLinkNoIdx != -1) {
                        swal({
                            title: "Confirmation",
                            text: "This link will be deleted, are you sure?",
                            type: "warning",
                            showCancelButton: true,
                            closeOnConfirm: false,
                            confirmButtonColor: "#2196F3",
                            showLoaderOnConfirm: true,
                            confirmButtonText: "Yes, delete it!",
                            cancelButtonText: "No, cancel plx!",
                        },
                    function (isConfirm) {
                        //setTimeout(function () {
                        if (isConfirm) {
                            var i = $scope.selectedLinkNoIdx;
                            $scope.releaseAllSelected();
                            $scope.links[i].line.remove();
                            $scope.links.splice(i, 1);
                            swal.close();
                        }
                        //}, 500);

                    });
                    }
                } else if (e.key == 'c' || e.key == 'C') {
                    if ($scope.selectedLinkNoIdx != -1) {
                        var idx = $scope.selectedLinkNoIdx;
                        if ($scope.links[idx].symbolCode == 'SUBMITCASE')
                            $scope.popupLinkCase(idx);
                        else if ($scope.links[idx].symbolCode == 'ALTER')
                            $scope.popupLinkAlter(idx);
                    }
                }
            });

            $scope.submitFlow = function () {
                //{ element: '', memberId: 0, symbolCode: '', caption: '', info:'', operator:'', value:0, textColor: '', backColor: '', left: 0, top: 0, width: 0, height: 0 };
                for (i = 0; i < $scope.nodes.length; i++) {
                    var node = $scope.nodes[i];
                    var elm = document.getElementById(node.element);
                    var fromIdx = $scope.getIndex(elm.id);

                    node.operator = "";
                    if (node.symbolCode == 'START') {
                        var cap = $("#title-start-" + fromIdx);

                        node.caption = cap.text();
                        var color = $scope.rgb2hex($("#start-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#start-" + fromIdx).css("color"));
                        node.textColor = color;
                    } else if (node.symbolCode == 'END') {
                        var cap = $("#title-end-" + fromIdx);

                        node.caption = cap.text();
                        var color = $scope.rgb2hex($("#end-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#end-" + fromIdx).css("color"));
                        node.textColor = color;
                    } else if (node.symbolCode == 'ACTIVITY') {
                        var cap = $("#title-activity-" + fromIdx);
                        var info = $("#info-activity-" + fromIdx).attr("data-content");
                        var id = document.getElementById("member-id-" + fromIdx);
                        node.memberId = id.value;
                        node.caption = cap.text();
                        node.info = info;
                        var color = $scope.rgb2hex($("#node-activity-caption-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#node-activity-caption-" + fromIdx).css("color"));
                        node.textColor = color;
                    } else if (node.symbolCode == 'DECISION') {
                        var cap = $("#title-decision-" + fromIdx);
                        var info = $("#info-decision-" + fromIdx).attr("data-content");
                        var operator = document.getElementById("decision-operator-" + fromIdx);
                        var value = document.getElementById("decision-value-" + fromIdx);
                        node.caption = cap.text();
                        node.info = info;
                        node.value = value.value;
                        node.operator = operator.value;
                        var color = $scope.rgb2hex($("#node-decision-caption-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#node-decision-caption-" + fromIdx).css("color"));
                        node.textColor = color;
                    } else if (node.symbolCode == 'CASE') {
                        var cap = $("#title-case-" + fromIdx);
                        var info = $("#info-case-" + fromIdx).attr("data-content");
                        var expression = document.getElementById("case-descr-" + fromIdx);
                        node.caption = cap.text();
                        node.info = info;
                        node.value = expression.value;
                        node.operator = "";
                        var color = $scope.rgb2hex($("#node-case-caption-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#node-case-caption-" + fromIdx).css("color"));
                        node.textColor = color;
                    } else if (node.symbolCode == 'PARARREL') {
                        var cap = $("#title-pararrel-" + fromIdx);
                        node.caption = cap.text();
                        node.operator = "";
                        var color = $scope.rgb2hex($("#node-pararrel-" + fromIdx).css("background-color"));
                        node.backColor = color;
                        color = $scope.rgb2hex($("#node-pararrel-" + fromIdx).css("color"));
                        node.textColor = color;
                    }

                    node.posleft = elm.style.left;
                    node.postop = elm.style.top;
                    node.width = elm.style.width;
                    node.height = elm.style.height;
                }
                var xx = 0;
            }

            $scope.rgb2hex = function (rgb) {
                if (rgb.search("rgb") == -1) {
                    return rgb;
                }
                else if (rgb == 'rgba(0, 0, 0, 0)') {
                    return 'transparent';
                }
                else {
                    rgb = rgb.match(/^rgba?\((\d+),\s*(\d+),\s*(\d+)(?:,\s*(\d+))?\)$/);
                    function hex(x) {
                        return ("0" + parseInt(x).toString(16)).slice(-2);
                    }
                    return "#" + hex(rgb[1]) + hex(rgb[2]) + hex(rgb[3]);
                }
            }

            $scope.initDiagram = function () {

            }

            /*--------------------------------------------------------------
                POPUP MEMBER
            --------------------------------------------------------------*/
            $scope.getLiteMembers = function (kriteria, page, row) {
                $scope.members = [];
                $http.post('@Url.Action("GetLiteAll2", "Member")', { topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                    if (response.data) {
                        $scope.members = response.data;

                        $scope.index = row * (page - 1);

                        $scope.paging = [];
                        $scope.getMemberCount(kriteria);

                        $scope.isView = true;
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.changePage = function (kriteria, page, row) {
                $scope.products = [];
                $http.post('@Url.Action("GetLiteAll2", "Member")', { topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                    if (response.data) {
                        $scope.members = response.data;
                        $scope.index = row * (page - 1);
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.getMemberCount = function (kriteria) {
                $http.post('@Url.Action("GetLiteAllCount2", "Member")', { topCriteria: kriteria }).then(function (response) {
                    if (response.data) {

                        var jumlahData = response.data;
                        var jumlahPage = Math.ceil(jumlahData / $scope.row);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push({ value: i, text: i });
                        }

                        $scope.page = "1";

                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.activityNo = 0;
            $scope.lookupMember = function (idx) {
                $scope.activityNo = idx;
                $("#modal_select_member").modal("show");
                $scope.members = [];
            }
            $scope.setMember = function (idxMember) {
                var idx = $scope.activityNo;
                var foto = document.getElementById("photo-profile-" + idx);
                var id = document.getElementById("member-id-" + idx);

                var member = $scope.members[idxMember];//{ Id: 1, Number: '001', Name: 'Budi Mulyana', Email: 'a@yahoo.com', ImageProfile: 'budi.png' };

                foto.src = "/Images/Member/" + member.ImageProfile;
                $("#member-number-" + idx).text(member.Number);
                $("#member-name-" + idx).text(member.Name);
                $("#member-email-" + idx).text(member.Email);
                id.value = member.Id;
            }
            /*--------------------------------------------------------------
                END POPUP MEMBER
            --------------------------------------------------------------*/

            $scope.popupActivity = function (elm) {
                $scope.defineActivityElement = elm;
                var idx = $scope.getIndex(elm);
                $scope.activity.Name = $("#" + elm).text();
                $scope.activity.Info = $("#info-activity-" + idx).attr("data-content");
                $("#modal_select_activity").modal("show");
            }
            $scope.setActivity = function () {
                var elm = $scope.defineActivityElement;
                var idx = $scope.getIndex(elm);
                $("#" + elm).text($scope.activity.Name);
                $("#info-activity-" + idx).attr("data-content", $scope.activity.Info);
                $("#info-activity-" + idx).attr("data-original-title", $scope.activity.Name);

            }

            $scope.popupDecision = function (elm) {
                $scope.defineDecisionElement = elm;
                var idx = $scope.getIndex(elm);
                $scope.decision.Name = $("#" + elm).text();
                $scope.decision.Info = $("#info-decision-" + idx).attr("data-content");

                var val = document.getElementById("decision-value-" + idx);
                $scope.decision.Value = val.value;
                var oprt = document.getElementById("decision-operator-" + idx);

                $scope.decision.Operator = oprt.value;
                $('#decision-operator').val(oprt.value);
                $("#modal_select_decision").modal("show");
            }
            $scope.setDecision = function () {
                var elm = $scope.defineDecisionElement;
                var idx = $scope.getIndex(elm);
                $("#" + elm).text($scope.decision.Name);
                $("#info-decision-" + idx).attr("data-content", $scope.decision.Info);
                $("#info-decision-" + idx).attr("data-original-title", $scope.decision.Name);
                $("#decision-descr-" + idx).text('value ' + $scope.decision.Operator + ' ' + $scope.decision.Value);

                var val = document.getElementById("decision-value-" + idx);
                val.value = $scope.decision.Value;
                var oprt = document.getElementById("decision-operator-" + idx);
                oprt.value = $scope.decision.Operator;
            }

            $scope.popupCase = function (elm) {
                $scope.defineCaseElement = elm;
                var idx = $scope.getIndex(elm);
                $scope.case.Name = $("#" + elm).text();
                $scope.case.Info = $("#info-case-" + idx).attr("data-content");
                $scope.case.Expression = $("#case-descr-" + idx).text();
                $("#modal_select_case").modal("show");
            }
            $scope.setCase = function () {
                var elm = $scope.defineCaseElement;
                var idx = $scope.getIndex(elm);
                $("#" + elm).text($scope.case.Name);
                $("#info-case-" + idx).attr("data-content", $scope.case.Info);
                $("#info-case-" + idx).attr("data-original-title", $scope.case.Name);
                $("#case-descr-" + idx).text($scope.case.Expression);
            }

            $scope.popupLinkCase = function (idx) {
                $scope.defineLinkCaseElement = idx;
                $scope.linkcase.Operator = $scope.links[idx].operator;
                $scope.linkcase.Value = $scope.links[idx].value;
                if ($scope.linkcase.Operator == '')
                    $scope.linkcase.Operator = "=";
                $('#linkcase-operator').val($scope.linkcase.Operator);
                $('#linkcase-value').val($scope.linkcase.Value);
                $("#modal_select_linkcase").modal("show");
            }
            $scope.setLinkCase = function () {
                var idx = $scope.defineLinkCaseElement;
                $scope.links[idx].operator = $scope.linkcase.Operator;
                $scope.links[idx].value = $scope.linkcase.Value;
                var val = $scope.linkcase.Operator + ' ' + $scope.linkcase.Value;
                if ($scope.linkcase.Operator == 'ELSE')
                    val = $scope.linkcase.Operator;
                $scope.links[idx].line.setOptions({ middleLabel: LeaderLine.pathLabel({ text: val, color: $scope.linkColorSubmitCase, fontSize: '8pt' }) });
            }

            $scope.popupLinkAlter = function (idx) {
                $scope.defineLinkAlterElement = idx;
                $scope.linkalter.PeriodUnit = $scope.links[idx].alterPeriodUnit;
                $scope.linkalter.Period = $scope.links[idx].alterPeriod;
                if ($scope.linkalter.PeriodUnit == '')
                    $scope.linkalter.PeriodUnit = "HOUR";
                $('#linkalter-period').val($scope.linkalter.Period);
                $('#linkalter-periodunit').val($scope.linkalter.PeriodUnit);
                $("#modal_select_linkalter").modal("show");
            }
            $scope.setLinkAlter = function () {
                var idx = $scope.defineLinkAlterElement;
                $scope.links[idx].alterPeriodUnit = $scope.linkalter.PeriodUnit;
                $scope.links[idx].alterPeriod = $scope.linkalter.Period;
                var val = $scope.linkalter.Period + ' ' + $scope.linkalter.PeriodUnit + ($scope.linkalter.Period > 1 ? 'S' : '');
                $scope.links[idx].line.setOptions({ middleLabel: LeaderLine.pathLabel({ text: val, color: $scope.linkColorSubmitCase, fontSize: '8pt' }) });
            }

            $scope.getIndex = function (elm) {
                var dashIdx = elm.lastIndexOf("-") + 1;
                return elm.substring(dashIdx, dashIdx + 2);
            }

        });


        $(function () {
            $.contextMenu({
                selector: '.context-menu-one',
                callback: function (key, options) {
                    //var m = "clicked: " + key;
                    //window.console && console.log(m) || alert(m);
                    if (key == 'addactivity') {
                        var scope = angular.element(document.getElementById("mainController")).scope();
                        scope.$apply(function () {
                            scope.addNodeActivity(0, 0);
                        });
                    } else if (key == 'adddecision') {
                        var scope = angular.element(document.getElementById("mainController")).scope();
                        scope.$apply(function () {
                            scope.addNodeDecision(0, 0);
                        });
                    } else if (key == 'addcase') {
                        var scope = angular.element(document.getElementById("mainController")).scope();
                        scope.$apply(function () {
                            scope.addNodeCase(0, 0);
                        });
                    } else if (key == 'addpararrel') {
                        var scope = angular.element(document.getElementById("mainController")).scope();
                        scope.$apply(function () {
                            scope.addNodePararrel(0, 0);
                        });
                    }

                },
                items: {
                    "addactivity": { name: "Add Activity" },
                    "sep1": "---------",
                    "adddecision": { name: "Add Decision" },
                    "addcase": { name: "Add Case" },
                    "addpararrel": { name: "Add Parallel" },
                    //copy: { name: "Copy", icon: "copy" },
                    //"paste": { name: "Paste", icon: "paste" },
                    //"delete": { name: "Delete", icon: "delete" },
                    //"sep1": "---------",
                    //"quit": {
                    //    name: "Quit", icon: function () {
                    //        return 'context-menu-icon context-menu-icon-quit';
                    //    }
                    //}
                }
            });

            $('.context-menu-one').on('click', function (e) {
                console.log('clicked', this);
            })
        });

        function canvasScroll() {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.refreshLines();
            });
        }

        function lookupReceipent(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.lookupMember(idx);
            });
        }

        function popupActivity(elm) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.popupActivity(elm);
            });
        }
        function popupDecision(elm) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.popupDecision(elm);
            });
        }
        function popupCase(elm) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.popupCase(elm);
            });
        }

        function removeActivityConfirmation(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.removeActivityConfirmation(idx);
            });
        }
        function removeDecisionConfirmation(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.removeDecisionConfirmation(idx);
            });
        }
        function removeCaseConfirmation(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.removeCaseConfirmation(idx);
            });
        }
        function removePararrelConfirmation(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.removePararrelConfirmation(idx);
            });
        }
        function removeAlterfirmation(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.removeAlterfirmation(idx);
            });
        }

        function selectLink(idx) {
            var scope = angular.element(document.getElementById("mainController")).scope();
            scope.$apply(function () {
                scope.selectLink(idx);
            });
        }

        $(document).ready(function () {
        })

    </script>

</body>
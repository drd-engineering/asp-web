@model DRD.Domain.JsonLayout

@*<link rel="stylesheet" href="/assets/css/demo.css">
    <link rel="stylesheet" href="/assets/css/header-user-dropdown.css">
    <link href='http://fonts.googleapis.com/css?family=Cookie' rel='stylesheet' type='text/css'>

    <link rel="stylesheet" href="/css/main.css">
    <link href="https://fonts.googleapis.com/css?family=Roboto:400,300,100,500,700,900" rel="stylesheet"
          type="text/css">
    <link href="/assets/css/icons/icomoon/styles.css" rel="stylesheet" type="text/css">
    <link href="/assets/css/icons/fontawesome/styles.min.css" rel="stylesheet" type="text/css">
    <link href="/assets/css/bootstrap.css" rel="stylesheet" type="text/css">
    <link href="/assets/css/core.css" rel="stylesheet" type="text/css">
    <link href="/assets/css/components.css" rel="stylesheet" type="text/css">
    <link href="/assets/css/colors.css" rel="stylesheet" type="text/css">

    <script type="text/javascript" src="/assets/js/plugins/loaders/pace.min.js"></script>
    <script type="text/javascript" src="/assets/js/core/libraries/jquery.min.js"></script>
    <script type="text/javascript" src="/assets/js/core/libraries/bootstrap.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/loaders/blockui.min.js"></script>

    <script src="/assets/js/plugins/buttons/spin.min.js" type="text/javascript"></script>
    <script src="/assets/js/plugins/buttons/ladda.min.js" type="text/javascript"></script>
    <script src="/assets/js/core/app.js" type="text/javascript"></script>
    <script src="/assets/js/pages/components_buttons.js" type="text/javascript"></script>
*@

<script src="/assets/js/plugins/buttons/spin.min.js" type="text/javascript"></script>
<script src="/assets/js/plugins/buttons/ladda.min.js" type="text/javascript"></script>
<script src="/assets/js/pages/components_buttons.js" type="text/javascript"></script>

<script src="/assets/vendors/angular-1.5.5/angular.js"></script>
<script src="/assets/vendors/angular-1.5.5/angular-animate.js"></script>
<script src="/Scripts/ui-bootstrap-tpls-1.3.2.js"></script>

<script src="/assets/vendors/file-upload/ng-file-upload-shim.min.js"></script>
<script src="/assets/vendors/file-upload/ng-file-upload.min.js"></script>


<!-- Theme JS files -->
@*<script type="text/javascript" src="assets/js/plugins/visualization/echarts/echarts.js"></script>
    <script type="text/javascript" src="assets/js/charts/echarts/columns_waterfalls.js"></script>
    <script type="text/javascript" src="assets/js/charts/echarts/timeline_option.js"></script>
    <script type="text/javascript" src="assets/js/charts/echarts/combinations.js"></script>*@
<!-- /theme JS files -->
<!-- Theme JS files -->
<script type="text/javascript" src="assets/js/plugins/forms/styling/uniform.min.js"></script>
<script type="text/javascript" src="assets/js/plugins/visualization/d3/d3.min.js"></script>
<script type="text/javascript" src="assets/js/plugins/visualization/d3/d3_tooltip.js"></script>
@*<script type="text/javascript" src="assets/js/core/app.js"></script>*@
@*<script type="text/javascript" src="assets/js/charts/d3/other/treemap.js"></script>
    <script type="text/javascript" src="assets/js/charts/d3/other/bubbles.js"></script>*@
@*<script type="text/javascript" src="assets/js/charts/d3/other/streamgraph.js"></script>*@
@*<script type="text/javascript" src="assets/js/charts/d3/other/waterfall.js"></script>*@
<!-- /theme JS files -->

<style>
    .image-wraper {
        float: left;
        margin-right: 10px;
        width: 20px;
        height: 20px;
        overflow: hidden;
        /*border: 1px solid #ddd;*/
        border-radius: 4px;
    }

    .image-content {
        width: 20px;
        cursor: pointer;
        /*padding: 5px;*/
        /*position: absolute;*/
        margin: auto;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
    }

    .push-right {
        text-align: right;
    }
    .padr{
        padding-right:1px
    }
    .padl{
        padding-left:1px
    }
</style>
<body @*ng-app="drdApp"*@>

    <!-- Page container -->
    <div class="page-container" ng-controller="drdController">
        <!-- Page content -->
        <div class="page-content">


            <!-- Main content -->
            <div class="content-wrapper">
                <!-- Page header -->
                <div class="page-header page-header-default">
                    <div class="page-header-content">
                        <div class="page-title">
                            <table>
                                <tr>
                                    <td>
                                        <img src="~/Images/DrDrive/drdivecloud.png" height="50" />
                                    </td>
                                    <td>
                                        <h4>DRDrive 1.0.2</h4>
                                    </td>
                                </tr>
                            </table>
                        </div>
                    </div>
                </div>

                <!-- /page header -->
                <!-- Content area -->

                <div class="content" id="content" style="display:none;">
                    <div class="row">
                        <div class="col-md-7">
                            <div style="border-bottom:dotted;border-bottom-width:1px">
                                <div class="row">
                                    <div class="col-md-6">
                                        <span style="font-size:large">My Folder</span>
                                    </div>
                                    <div class="col-md-6">
                                        <a class="pull-right" style="text-align:end" href="" ng-click="popupFolder()" data-toggle="tooltip" data-placement="right" title="Add folder">
                                            <img src="~/Images/DrDrive/folder-add-icon.png" width="25" />
                                        </a>
                                    </div>
                                </div>
                            </div>
                            <br />
                            
                            <table class="table-xs table-striped table-hover" style="font-size:small;width:100%">
                                <tbody>
                                    <tr ng-repeat="x in folders" style="vertical-align:top;border-bottom:solid;border-bottom-width:1px">

                                        <td><a ng-click="doList(x.Folder.MemberId, x.TotalFile, x.Folder.Id, x.Folder.Name);">{{x.Folder.Name}}</a></td>

                                        <td>{{x.TotalFile|number}} <span style="color:darkgrey;font-size:xx-small;">files</span></td>
                                        <td class="push-right" style="padding-right:5px"><span ng-hide="x.Folder.MemberId==0">{{x.TotalSize|number}}</span></td>
                                        <td style="padding-left:unset;color:darkgrey;font-size:xx-small;"><span ng-hide="x.Folder.MemberId==0">bytes</span></td>
                                        <td width="10" style="padding:5px">
                                            <img src="~/Images/DrDrive/edit-folder.png" style="width:20px;cursor:pointer" data-toggle="tooltip" data-placement="right" title="Edit folder" ng-click="popupFolder(x.Folder)" ng-show="x.Folder.FolderType==0 || (allowTemplate && x.Folder.FolderType==1)"/>
                                        </td>
                                        <td width="10" style="padding:5px">
                                            <img src="~/Images/DrDrive/Folder-Delete.png" style="width:20px;cursor:pointer" data-toggle="tooltip" data-placement="right" title="Delete folder" ng-click="removeFolder(x.Folder.Id)" ng-hide="x.TotalFile>0 || x.Folder.MemberId==0"/>
                                        </td>
                                        <td width="10" style="padding:5px">
                                            <div class="image-wraper">
                                                <img ng-src="/Images/drdrive/upload_file.png" class="image-content"
                                                     ngf-drop="uploadDocFile(x.Folder.Id, x.Folder.Name, $file, $invalidFiles)"
                                                     ngf-select="uploadDocFile(x.Folder.Id, x.Folder.Name, $file, $invalidFiles)"
                                                     @*ngf-pattern="'audio/*'"
                                                     accept="audio/*"*@
                                                     @*ngf-max-height="1000" ngf-max-size="1MB"*@
                                                     ngf-max-size="1000MB" style="object-fit:fill;cursor:pointer" ng-show="x.Folder.FolderType==0 || (isValidObject('ISTEMPLATEDRD') && x.Folder.FolderType==1)" 
                                                     data-toggle="tooltip" data-placement="right" title="Upload file"/>
                                            </div>

                                        </td>
                                    </tr>
                                </tbody>
                            </table>
                            <span style="position:absolute;padding:5px;font-size:smaller;color:darkred"
                                  ng-model="progressUploadFile" ng-hide="folderName==''">Last uploaded:<b>{{folderName}}\{{docFileName}}, {{model.FileSize|number}} bytes, {{progressValueUploadFile}}</b></span>
                        </div>

                        <div class="col-md-5">
                            <div style="border-bottom:dotted;border-bottom-width:1px">
                                <span style="font-size:large">My Plan Storage</span>
                            </div>
                            <br />
                            <table class="table-xs table-striped table-hover" style="font-size:small;width:100%">

                                <tbody>
                                    <tr style="vertical-align:top;border-bottom:solid;border-bottom-width:1px">

                                        <td>Storage Size</td>
                                        <td class="push-right" style="padding-right:5px">{{dashboard.PlanStorageSize*byteGb | number}}</td>
                                        <td style="padding-left:unset;color:darkgrey;font-size:xx-small;">bytes</td>
                                    </tr>
                                    <tr style="vertical-align:top;border-bottom:solid;border-bottom-width:1px">

                                        <td>Total Storage Usage</td>
                                        <td class="push-right" style="padding-right:5px">{{dashboard.TotalStorageUsage|number}}</td>
                                        <td style="padding-left:unset;color:darkgrey;font-size:xx-small;">bytes</td>
                                    </tr>
                                    <tr style="vertical-align:top;border-bottom:solid;border-bottom-width:1px" ng-show="(dashboard.PlanStorageSize*byteGb)-dashboard.TotalStorageUsage>=0">

                                        <td><b>Remaining Available</b></td>
                                        <td class="push-right" style="padding-right:5px">{{(dashboard.PlanStorageSize*byteGb)-dashboard.TotalStorageUsage|number}}</td>
                                        <td style="padding-left:unset;color:darkgrey;font-size:xx-small;">bytes</td>
                                    </tr>
                                    <tr style="vertical-align:top;border-bottom:solid;border-bottom-width:1px" ng-show="(dashboard.PlanStorageSize*byteGb)-dashboard.TotalStorageUsage<0">

                                        <td><b style="color:red">Over Usage</b></td>
                                        <td class="push-right" style="padding-right:5px">{{(dashboard.PlanStorageSize*byteGb)-dashboard.TotalStorageUsage|number}}</td>
                                        <td style="padding-left:unset;color:darkgrey;font-size:xx-small;">bytes</td>
                                    </tr>
                                </tbody>
                            </table>
                        </div>


                    </div>
                    <!-- LIST -->
                    <div ng-hide="folderNameList==''">
                        <br />
                        <h3>{{folderNameList}}</h3>
                        <div class="row">

                            <div class="col-md-6">

                                <div class="btn-group" ng-hide="!allowTemplate && currentFolderId==1">
                                    <button type="button" class="btn btn-xs border-slate text-slate-800 btn-flat dropdown-toggle" data-toggle="dropdown" aria-expanded="false" ng-disabled="diabledMove()">Move <span class="caret"></span></button>
                                    <ul class="dropdown-menu dropdown-menu-right">
                                        <li ng-repeat="x in folders | filter: folderFilter"><a href="" ng-click="moveToFolder(x.Folder.Id)"><i class="icon-folder6"></i> {{x.Folder.Name}}</a></li>

                                    </ul>
                                    <button type="button" class="btn btn-xs border-danger text-danger btn-flat" style="margin-left:5px" ng-disabled="diabledMove()" ng-click="deleteFiles()">Delete</button>
                                </div>
                            </div>
                            <div class="col-md-6">
                                <div class="pull-right">
                                    <select ng-model="page" class="form-control" ng-change="changePage(kriteria, page, row)">
                                        <option value="{{x.value}}" ng-repeat="x in paging">{{x.text}}</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <div calss="row">

                            <div class="panel panel-flat">
                                <div class="table-responsive">

                                    <table class="table-xs table-bordered table-striped" style="font-size:small;width:100%">
                                        <thead>
                                            <tr>
                                                <th width="75">#&nbsp<input type="checkbox" class="control-success" ng-model="isCheckedAll" ng-change="checkedAll()" id="checkedAll"></th>
                                                <th>File Name</th>
                                                <th>Size (Bytes)</th>
                                                <th width="150">Download Count</th>
                                                <th width="150">Upload Date</th>
                                                @*<th width="50">Act</th>*@
                                            </tr>
                                        </thead>
                                        <tbody>
                                            <tr ng-repeat="x in docFiles" style="vertical-align:top" @*on-finish-render="ngRepeatFinished"*@>
                                                <td width="75">
                                                    {{$index+1 + index}}
                                                    <input type="checkbox" class="control-danger" ng-model="options[$index]" ng-value="x.IsChecked" ng-change="toggleItem($index)">
                                                </td>
                                                <td>
                                                    <a ng-click="do_download($index, x.Key);">
                                                    <img src="/Images/FileType/{{x.ExtFile}}.png" width="16" /> {{x.FileNameOri}}</a>
                                                </td>
                                                <td style="text-align:right">{{x.FileSize | number}}</td>
                                                <td>{{x.CxDownload}}</td>
                                                <td>{{convertJsonDate(x.DateCreated)|date:'dd/MM/yyyy HH:mm:ss'}}</td>
                                                @*<td><img src="~/Images/DrDrive/file_delete.png" style="width:20px;cursor:pointer" data-toggle="tooltip" data-placement="right" title="Delete file" ng-click="deleteFile(x.Id)" /></td>*@
                                                
                                            </tr>
                                        </tbody>
                                    </table>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- /LIST -->
                    <!-- View member modal -->
                    <ng-include src="'/Include/PopupFolder'"></ng-include>
                    <!-- View member modal -->
                </div>
                <!-- /content area -->
                <!-- /main content -->
            </div>
            <!-- /page content -->
        </div>
        <!-- /page container -->

        <script type="text/javascript">


            var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap', 'ngFileUpload']) //, 'ui.select2'])

            myApp.controller("drdController", function ($scope, Upload, $location, $http, $filter) {
                $scope.product = {};
                $scope.products = [];
                $scope.model = {};
                $scope.model.FileSize=0;
                $scope.productCount = [];
                $scope.paging = [];
                $scope.kriteria = "";
                $scope.docFileName="nofile";
                $scope.progressValueUploadFile="0%";
                $scope.folderName="";
                $scope.byteGb=1024*1024*1024;
                $scope.folderNameList="";
                $scope.page = 1;
                $scope.row = 20;
                $scope.currPage = 0;
                $scope.isView = false;
                $scope.index = 0;
                $scope.folders = [];
                $scope.dashboard = {};
                $scope.isUpload = 0;
                $scope.objectItems = [];
                $scope.docFiles = [];
                $scope.currentMemberId=0;
                $scope.currentFolderId=0;
                $scope.allowTemplate=false;
                $scope.options = [];
                initValues();


                /*--------------------------------------------------------------
                INIT DATA
                --------------------------------------------------------------*/
                function initValues() {
                    $scope.objectItems = @Html.Raw(Json.Encode(Model.objItems));

                }

                angular.element(document).ready(function () {
                    $scope.allowTemplate=$scope.isValidObject('ISTEMPLATEDRD');
                    $scope.getCounting();
                    $("#content").show();
                });

                $scope.doList = function (memberId, totFile, id, name){
                    if (totFile==0){
                        showInfo("No file to display");
                        return;
                    }
                    $scope.isCheckedAll=false;
                    $scope.checkedAll();

                    $scope.currentMemberId=memberId;
                    $scope.currentFolderId=id;
                    $scope.folderNameList=name;
                    $scope.getLiteProducts(id, $scope.kriteria, 1, $scope.row);

                }

                $scope.refreshAll = function () {
                    $scope.isCheckedAll = false;
                    $scope.checkedAll();
                    $scope.getLiteProducts($scope.currentFolderId, $scope.kriteria, $scope.page, $scope.row);
                    $scope.getCounting();
                }
                /*--------------------------------------------------------------
                CHECKBOX SELECTED
                --------------------------------------------------------------*/
                $scope.checkedAll = function () {
                    for (i = 0; i < $scope.docFiles.length; i++) {
                        $scope.docFiles[i].IsChecked = $scope.isCheckedAll;
                        $scope.options[i] = $scope.isCheckedAll;
                    }
                }
                $scope.toggleItem = function (index) {
                    $scope.docFiles[index].IsChecked = !$scope.docFiles[index].IsChecked;
                    if (!$scope.docFiles[index].checked) {
                        $scope.isCheckedAll = false;
                        $("#checkAll").prop("checked",false);
                    }
                };

                $scope.diabledMove = function () {
                    for (i = 0; i < $scope.docFiles.length; i++) {
                        if ($scope.docFiles[i].IsChecked)
                            return false;
                    }
                    return true;
                }
                $scope.folderFilter = function (item) {
                    return item.Folder.MemberId!=0 || $scope.allowTemplate;// $scope.isValidObject('ISTEMPLATEDRD');
                };

                $scope.do_download = function (idx, key){
                    location.href = "/updownfile/xdownloaddrdrive?key=" + key;
                    $scope.docFiles[idx].CxDownload++;

                }

                @*$scope.deleteFile = function (id) {
                    swal({
                        title: "Confirmation",
                        text: "this file will be deleted, continue?",
                        type: "warning",
                        showCancelButton: true,
                        closeOnConfirm: false,
                        confirmButtonColor: "#2196F3",
                        showLoaderOnConfirm: true,
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "No, cancel please!",
                    },
                    function (isConfirm) {
                        //setTimeout(function () {
                        if (isConfirm){
                            $scope.deleteFileNow(id);
                        }
                        swal.close();
                        //}, 500);

                    });

                };

                $scope.deleteFileNow = function (id) {
                    $http.post('@Url.Action("delete", "drdrive")',
                    {
                        id:id
                    }).then(function (response) {
                        if (response.data!=1) {
                            $scope.refreshAll();
                        }else{
                            showInfo("File cannot be deleted, because it contains files");
                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }*@

                $scope.deleteFiles = function () {
                    swal({
                        title: "Confirmation",
                        text: "These files will be deleted, continue?",
                        type: "warning",
                        showCancelButton: true,
                        closeOnConfirm: false,
                        confirmButtonColor: "#2196F3",
                        showLoaderOnConfirm: true,
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "No, cancel please!",
                    },
                    function (isConfirm) {
                        //setTimeout(function () {
                        if (isConfirm){
                            $scope.deleteFilesNow();
                        }
                        swal.close();
                        //}, 500);

                    });

                };

                $scope.deleteFilesNow = function () {
                    var ids = "";
                    for (i = 0; i < $scope.docFiles.length; i++) {
                        if ($scope.docFiles[i].IsChecked) {
                            if (ids != "")
                                ids += ",";
                            ids += $scope.docFiles[i].Id;
                        }

                    }
                    $http.post('@Url.Action("delete", "drdrive")', { docIds: ids }).then(function (response) {
                        if (response.data) {
                            $scope.refreshAll();

                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }
                /*--------------------------------------------------------------
                GET FOLDER
                --------------------------------------------------------------*/
                $scope.getCounting = function () {
                    $http.post('@Url.Action("getcounting", "drdrive")', {}).then(function (response) {
                        if (response.data) {
                            $scope.dashboard = response.data;
                            $scope.folders=$scope.dashboard.Folders;
                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }

                $scope.popupFolder = function (folder) {
                    if (folder == undefined) {
                        $scope.folderId = 0;
                        $("#folderName").val("");
                        $("#folderDescr").val("");
                    } else {
                        $scope.folderId = folder.Id;
                        $("#folderName").val(folder.Name);
                        $("#folderDescr").val(folder.Descr);
                    }
                    $("#modal_folder").modal("show");
                };
                $scope.saveFolder = function () {
                    if ($("#folderName").val()==""){
                        showInfo("Required folder name");
                        return;
                    }
                    var item = {Folder: { Id: $scope.folderId, Name: $("#folderName").val(), Descr: $("#folderDescr").val(), FolderType:0 }, TotalFile:0, TotalSize:0, CxDownload:0};

                    $http.post('@Url.Action("save", "memberfolder")',
                        {
                            folder:{
                                Id:item.Folder.Id,
                                Name:item.Folder.Name,
                                Descr:item.Folder.Descr
                            }
                        }).then(function (response) {
                            if (response.data) {
                                if (item.Folder.Id==0){
                                    item.Folder.Id=response.data;
                                    $scope.folders.push(item);
                                }else{
                                    for(i=0;i<$scope.folders.length;i++){
                                        if ($scope.folders[i].Folder.Id==$scope.folderId){
                                            $scope.folders[i].Folder.Name=item.Folder.Name;
                                            $scope.folders[i].Folder.Descr=item.Folder.Descr;
                                            break;
                                        }
                                    }
                                }
                            }
                        }, function (response) {
                            //error handle\
                            var x = 0;
                        });
                };

                $scope.removeFolder = function (id) {
                    swal({
                        title: "Confirmation",
                        text: "this folder will be deleted, continue?",
                        type: "warning",
                        showCancelButton: true,
                        closeOnConfirm: false,
                        confirmButtonColor: "#2196F3",
                        showLoaderOnConfirm: true,
                        confirmButtonText: "Yes, delete it!",
                        cancelButtonText: "No, cancel please!",
                    },
                    function (isConfirm) {
                        //setTimeout(function () {
                        if (isConfirm){
                            $scope.removeFolderNow(id);
                        }
                        swal.close();
                        //}, 500);

                    });

                };

                $scope.removeFolderNow = function (id) {
                    $http.post('@Url.Action("remove", "memberfolder")',
                    {
                        folderId:id
                    }).then(function (response) {
                        if (response.data==1) {
                            for(i=$scope.folders.length-1;i>0;i--){
                                if ($scope.folders[i].Folder.Id==id){
                                    $scope.folders.splice(i,1);
                                    break;
                                }
                            }
                        }else{
                            showInfo("Folder cannot be deleted, because it contains files");
                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }

                $scope.moveToFolder = function (id) {
                    var ids = "";
                    for (i = 0; i < $scope.docFiles.length; i++) {
                        if ($scope.docFiles[i].IsChecked) {
                            if (ids != "")
                                ids += ",";
                            ids += $scope.docFiles[i].Id;
                        }

                    }
                    $http.post('@Url.Action("move", "drdrive")', { docIds: ids, folderId: id }).then(function (response) {
                        if (response.data) {
                            $scope.refreshAll();

                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }
                /*--------------------------------------------------------------
                UPLOAD FILE
                --------------------------------------------------------------*/
                $scope.uploadDocFile = function (id, folderName, file, errFiles) {
                    $scope.folderName=folderName;
                    $scope.f = file;
                    $scope.errFile = errFiles && errFiles[0];
                    if (file) {
                        $scope.docFileName=file.name
                        $scope.model.FileNameOri=file.name;
                        $scope.model.FileSize=file.size;

                        file.upload = Upload.upload({
                            url: '/updownfile/xuploaddrdrive?folderId='+id,
                            data: { MyFile: file }
                        });

                        file.upload.then(function (response) {
                            //$timeout(function () {
                            file.result = response.data;
                            if (file.result.idx==-2){
                                showInfo("Invalid member plan.");
                                $scope.progressValueUploadFile="Failed";
                            }else if (file.result.idx==-4){
                                showInfo("Document quota is insufficient.");
                                $scope.progressValueUploadFile="Failed";
                            }else{
                                $scope.model.FileName=file.result.filename;
                                $scope.model.ExtFile=file.result.fileext;
                                $scope.fileTypeImage=$scope.model.ExtFile+".png";
                                $scope.progressValueUploadFile="Upload success";
                                $scope.isUpload=1;
                                if (id==$scope.currentFolderId)
                                    $scope.getLiteProducts(id, $scope.kriteria, $scope.page, $scope.row);
                                $scope.getCounting();
                            }
                            //});
                        }, function (response) {
                            if (response.status > 0){
                                showError("Error upload file : "+response.statusText);
                            }
                        }, function (evt) {
                            file.progress = Math.min(100, parseInt(100.0 * evt.loaded / evt.total));

                            if (file.progress>=100){
                                $scope.progressValueUploadFile="Upload success";
                                //$scope.podcastImage="podcast_uploaded.png";
                                $scope.isUpload=1;
                            }else
                                $scope.progressValueUploadFile="Uploading...("+file.progress+"%)";

                        });
                    } else if ($scope.errFile != null) {
                        showError("Error upload file : " + $scope.errFile.$error + " (" + $scope.errFile.$errorParam + ")");
                    }
                }

                /*--------------------------------------------------------------
                GET PRODUCT
                --------------------------------------------------------------*/
                $scope.getLiteProducts = function (folderId, kriteria, page, row) {
                    $scope.docFiles = [];
                    $http.post('@Url.Action("GetLiteAll", "drdrive")', {memberId:$scope.currentMemberId, folderId: folderId, topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                        if (response.data) {
                            $scope.docFiles = response.data;

                            $scope.index = row * (page - 1);

                            $scope.paging = [];
                            $scope.getProductCount(folderId, kriteria);

                            $scope.isView = true;

                            //Ladda.stopAll();

                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }

                $scope.changePage = function (folderId, kriteria, page, row) {
                    $scope.docFiles = [];
                    $http.post('@Url.Action("GetLiteAll", "drdrive")', {memberId:$scope.currentMemberId, folderId: folderId, topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                        if (response.data) {
                            $scope.docFiles = response.data;
                            $scope.index = row * (page - 1);


                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }

                $scope.getProductCount = function (folderId, kriteria) {
                    $http.post('@Url.Action("GetLiteAllCount", "drdrive")', {memberId:$scope.currentMemberId, folderId: folderId, topCriteria: kriteria }).then(function (response) {
                        if (response.data) {

                            var jumlahData = response.data;
                            var jumlahPage = Math.ceil(jumlahData / $scope.row);
                            for (var i = 1; i <= jumlahPage; i++) {
                                $scope.paging.push({ value: i, text: i });
                            }

                            $scope.page = "1";

                        }
                    }, function (response) {
                        //error handle\
                        var x = 0;
                    });
                }
                /*--------------------------------------------------------------
                CONVERT JSON DATE
                --------------------------------------------------------------*/
                $scope.convertJsonDate = function (val) {
                    if (val == undefined)
                        return '';
                    return new Date(parseInt(val.substr(6)));
                }
                $scope.isValidObject = function (name) {
                    return $scope.objectItems.includes(name);
                };
            });

            $(function () {

            });


            $(document).ready(function () {


            });

        </script>

</body>
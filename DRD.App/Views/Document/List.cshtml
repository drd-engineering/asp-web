@model DRD.Models.View.Layout

@{
    ViewBag.Title = "Document";
    ViewBag.Submenu = "DOCUMENT";
}


@section Scripts
{
    <script src="/assets/js/plugins/buttons/spin.min.js" type="text/javascript"></script>
    <script src="/assets/js/plugins/buttons/ladda.min.js" type="text/javascript"></script>
    <script src="/assets/js/pages/components_buttons.js" type="text/javascript"></script>

    <script src="/assets/vendors/angular-1.5.5/angular.js"></script>
    <script src="/assets/vendors/angular-1.5.5/angular-animate.js"></script>
    <script src="/Scripts/ui-bootstrap-tpls-1.3.2.js"></script>


    <script type="text/javascript" src="/assets/js/plugins/forms/styling/uniform.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/forms/styling/switchery.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/forms/styling/switch.min.js"></script>
}
@section Styles{
    <link href="/assets/css/pages/dashboard.css" rel="stylesheet" type="text/css">
}

<body @*ng-app="ppriApp"*@>

    <!-- Page container -->
    <div class="page-container" ng-controller="drdController">
        <!-- Page content -->
        <div class="page-content">
            <!-- Main content -->
            <div class="content-wrapper">
                <!-- Page header -->
                <div ng-show="noCompanyFound()">
                    You Don't have any Company, so you can not see any document
                </div>
                <div class="page-header page-header-default" ng-show="hasCompany()">
                    <div class="page-header-content">
                        <div class="page-title">
                            <h4>Document List</h4>
                            <span style="font-size:small">Document list</span>
                            <br />
                            <br />
                            <div class="row">
                                <div class="col-lg-12" style="width:100% !important;">
                                    <!-- SELECT -->
                                    <select class="card-filter" ng-model="companySelected" ng-options="x.Name for x in companyOwned" ng-change="getProducts(kriteria, page, row, companySelected.Id)"></select>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <!-- /page header -->
                <!-- Content area -->

                <div class="content" ng-show="hasCompanyAndIsView()">
                    <!-- LIST -->
                    <div class="row">
                        <div class="col-1">
                            <button class="image-container-sm" ng-click="downloadAllDocumentCompany()">
                                <span class="tooltiptext">download all document</span>
                                <img src="~/Images/icon/download-icon.png" />
                            </button>
                        </div>
                    </div>
                    <div calss="row">
                        <div class="panel panel-flat">
                            <div class="table-responsive">
                                <table class="table-xxs table-hover datatable-highlight dataTable no-footer" style="font-size:small;width:100%">
                                    <thead>
                                        <tr>
                                            <th width="25px">#</th>
                                            <th>@*<input type="checkbox" class="control-success" ng-model="isCheckedAll" ng-change="checkedAll()" id="checkedAll">&nbsp*@Title</th>
                                            <th>Version</th>
                                            <th>Size (Bytes)</th>
                                            <th width="150px">Original File Name</th>
                                            <th width="50px">Download</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr style="cursor:pointer;height:50px;height:50px;vertical-align:central;" ng-repeat="x in products" style="vertical-align:top" @*on-finish-render="ngRepeatFinished"*@>
                                            <td>{{$index+1 + index}}</td>
                                            <td>{{x.Title}}</td>
                                            <td>{{x.Version}}</td>
                                            <td style="text-align:right">{{x.FileSize | number}}</td>
                                            <td><img src="/Images/FileType/{{x.ExtFile}}.png" width="16" /> {{x.FileNameOri}}</td>
                                            <td><a ng-click="do_download(x.FileName);">Download</a></td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                        </div>
                    </div>
                    <!-- /LIST -->

                </div>
                <!-- /content area -->
            </div>
            <!-- /main content -->
        </div>
        <!-- /page content -->
    </div>
    <!-- /page container -->

    <script type="text/javascript">


        var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap']) //, 'ui.select2'])
        //myApp.directive('onFinishRender', function ($timeout) {
        //    return {
        //        restrict: 'A',
        //        link: function (scope, element, attr) {
        //            if (scope.$last === true) {
        //                $timeout(function () {
        //                    scope.$emit('ngRepeatBindRoutesFinished');
        //                });
        //            }
        //        }
        //    }
        //});
        myApp.controller("drdController", function ($scope, $location, $http, $filter) {
            $scope.product = {};
            $scope.products = [];
            $scope.productCount = [];
            $scope.paging = [];
            $scope.kriteria = "";
            $scope.page = 1;
            $scope.row = 20;
            $scope.currPage = 0;
            $scope.isView = false;
            $scope.index = 0;
            $scope.isCheckedAll = false;
            $scope.options = [];
            $scope.folders = [];

            $scope.companySelected = {};
            $scope.companySearched = false;
            $scope.companyOwned = [];

            //$scope.$on('ngRepeatBindRoutesFinished', function (ngRepeatFinishedEvent) {
            //    $(".control-danger").uniform({
            //        radioClass: 'choice',
            //        wrapperClass: 'border-danger-600 text-danger-800'
            //    });
            //    $(".control-success").uniform({
            //        radioClass: 'choice',
            //        wrapperClass: 'border-success-600 text-success-800'
            //    });
            //    //$(".switch").bootstrapSwitch();
            //});
            /*--------------------------------------------------------------
            INIT DATA
            --------------------------------------------------------------*/
            angular.element(document).ready(function () {
                $scope.getCompanyOwned();
                /*$scope.getProducts($scope.kriteria, $scope.page, $scope.row, $scope.companySelected.Id);*/
            });
            /*--------------------------------------------------------------
            GET ALL COMPANY FILTER FOR USER ONLY SHOW DOCUMENT THAT RELATED
            --------------------------------------------------------------*/
            $scope.getCompanyOwned = function () {
                $http.post('@Url.Action("GetAllCompanyOwnedbyUser", "Company")', {}).then(function (response) {
                    if (response.data) {
                        $scope.companyOwned = response.data.companies;
                        $scope.companySearched = true;
                    } else $scope.companySearched = true;
                })
            }
            $scope.hasCompany = function () {
                if ($scope.companyOwned.length > 0) {
                    return true;
                } else return false;
            }
            $scope.hasCompanyAndIsView = function () {
                if ($scope.companyOwned.length > 0 && $scope.isView) {
                    return true;
                } else return false;
            }
            $scope.noCompanyFound = function () {
                if ($scope.companyOwned.length <= 0 && $scope.companySearched) {
                    return true;
                } else return false;
            }
            /*--------------------------------------------------------------
            GET PRODUCT
            --------------------------------------------------------------*/
            $scope.getProducts = function (kriteria, page, row, companyId) {
                /*var btn = Ladda.create(document.querySelector('.btn-process'));
                btn.start();*/
                console.log(kriteria, page, row, companyId)
                $scope.products = [];
                $http.post('@Url.Action("GetCompanyDocument", "document")', { searchKeyword: kriteria, page: page, pageSize: row, companyId: companyId }).then(function (response) {
                    if (response.data) {
                        console.log(response.data);
                        $scope.products = response.data;
                        if($scope.products != null && $scope.products.length > 0) $scope.isView = true;
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }
            /*--------------------------------------------------------------
            CONVERT JSON DATE
            --------------------------------------------------------------*/
            $scope.convertJsonDate = function (val) {
                if (val == undefined)
                    return '';
                return new Date(parseInt(val.substr(6)));
            }
            $scope.downloadAllDocumentCompany = function () {
                window.open("/updownfile/DownloadAllDocumentfromCompany?companyId="+$scope.companySelected.Id)
            }


            /// Belum digunakan
            /*--------------------------------------------------------------
            DO EDIT
            --------------------------------------------------------------*/

            $scope.do_edit = function (mid, id) {
                location.href = "/document/document?mid=" + mid + "," + id;
            }
            $scope.addProduct = function (mid) {
                location.href = "/document/document?mid=" + mid;
            }
            $scope.do_download = function (fname){
                location.href = "/updownfile/xdownload?ufileName=" + fname+"&isDocument=true";
            }

            $scope.checkedAll = function () {
                for (i = 0; i < $scope.products.length; i++) {
                    $scope.products[i].IsChecked = $scope.isCheckedAll;
                    $scope.options[i] = $scope.isCheckedAll;
                }
            }
            $scope.toggleCurrency = function (index) {
                $scope.products[index].IsChecked = !$scope.products[index].IsChecked;
                //$scope.options[index] = !$scope.options[index];
                if (!$scope.products[index].checked) {
                    $scope.isCheckedAll = false;
                    $("#checkAll").prop("checked",false);
                }
            };

            $scope.diabledMove = function () {
                for (i = 0; i < $scope.products.length; i++) {
                    if ($scope.products[i].IsChecked)
                        return false;
                }
                return true;
            }

            /*--------------------------------------------------------------
            MOVE TO FOLDER
            --------------------------------------------------------------*/
            $scope.moveToFolder = function (id) {
                var ids = "";
                for (i = 0; i < $scope.products.length; i++) {
                    if ($scope.products[i].IsChecked) {
                        if (ids != "")
                            ids += ",";
                        ids += $scope.products[i].Id;
                    }

                }
                $http.post('@Url.Action("move", "document")', { docIds: ids, folderId: id }).then(function (response) {
                    if (response.data) {
                        $scope.isCheckedAll = false;
                        $scope.checkedAll();
                        $scope.getLiteProducts($scope.kriteria, $scope.page, $scope.row);
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }
            /*--------------------------------------------------------------
            GET FOLDER
            --------------------------------------------------------------*/
            $scope.getFolders = function () {
                $http.post('@Url.Action("GetAll", "memberfolder")', { excludeId: 1 }).then(function (response) {
                    if (response.data) {
                        $scope.folders = response.data;
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.changePage = function (kriteria, page, row) {
                $scope.products = [];
                $http.post('@Url.Action("GetLiteAll", "document")', { topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                    if (response.data) {
                        $scope.products = response.data;
                        $scope.index = row * (page - 1);


                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.getProductCount = function (kriteria) {
                $http.post('@Url.Action("GetLiteAllCount", "document")', { topCriteria: kriteria }).then(function (response) {
                    if (response.data) {

                        var jumlahData = response.data;
                        var jumlahPage = Math.ceil(jumlahData / $scope.row);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push({ value: i, text: i });
                        }

                        $scope.page = "1";

                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            /*--------------------------------------------------------------
            GENERAL FUNCTION
            --------------------------------------------------------------*/

        });

        $(function () {

        });

        $(document).ready(function () {

        });

    </script>

</body>
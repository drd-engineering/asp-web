@model DRD.Models.View.Layout

@{
    ViewBag.Title = "Dashboard";
    ViewBag.Submenu = "DASHBOARD";
}

@section Scripts
{
    <script src="/assets/js/plugins/buttons/spin.min.js" type="text/javascript"></script>
    <script src="/assets/js/plugins/buttons/ladda.min.js" type="text/javascript"></script>
    <script src="/assets/js/pages/components_buttons.js" type="text/javascript"></script>

    <script src="/assets/vendors/angular-1.5.5/angular.js"></script>
    <script src="/assets/vendors/angular-1.5.5/angular-animate.js"></script>
    <script src="/Scripts/ui-bootstrap-tpls-1.3.2.js"></script>

    <!-- Theme JS files -->
    <script type="text/javascript" src="assets/js/plugins/forms/styling/uniform.min.js"></script>
    <script type="text/javascript" src="assets/js/plugins/visualization/d3/d3.min.js"></script>
    <script type="text/javascript" src="assets/js/plugins/visualization/d3/d3_tooltip.js"></script>
    <!-- /theme JS files -->
 }
@section Styles{ 
    <link href="/assets/css/pages/dashboard.css" rel="stylesheet" type="text/css">
}
    <body ng-controller="drdController">
        <div class="page-container">
            <section id="dashboard-highlight">
                <div class="row">

                    <!-- DASHBOARD - ROTATION -->
                    <div class="col-sm-8 col-md-4" id="dashboard-rotation">
                        <div class="panel highlight-container">
                            <div class="highlight-card">
                                <!-- HEADER -->
                                <div class="highlight-header">
                                    <div class="container">
                                        <div class="row vertical-align-row">
                                            <div class="col-md-4">
                                                <p class="card-title"><strong>ROTATION</strong></p>
                                            </div>
                                            <div class="col-md-4">
                                                
                                            </div>
                                            <div class="col-md-4 " style="align-items:flex-end;">
                                                <!-- SELECT -->
                                                <select class="card-filter select-lg pull-right" ng-model="selectedCompany" ng-options="x.Name for x in companyOwned" ng-change="setSelectedCompany(selectedCompany)"></select>
                                            </div>
                                        </div>
                                    </div>
                                </div>

                                <!-- CONTENT -->
                                <div class="card-content">
                                    <div class="container">
                                        <div class="row">
                                            <div class="col-sm-6">
                                                <div class="row vertical-align-row" ng-click="linkPage('INPROGRESS')">
                                                    <div class="col-sm-6 vertical-align-content">
                                                        <div class="card-image-lg round-img">
                                                            <img src="~/assets/ongoing.png" />
                                                            <p>Ongoing</p>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="card-content-lg">
                                                            <h1>{{counter.New.InProgress}}</h1>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>

                                            <div class="col-sm-6">
                                                <div class="row vertical-align-row" ng-click="linkPage('COMPLETED')">
                                                    <div class="col-sm-6 vertical-align-content">
                                                        <div class="card-image-lg round-img">
                                                            <img src="~/assets/completed.png" />
                                                            <p>Completed</p>
                                                        </div>
                                                    </div>
                                                    <div class="col-sm-6">
                                                        <div class="card-content-lg">
                                                            <h1>{{counter.New.Completed}}</h1>
                                                        </div>

                                                    </div>

                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- end of DASHBOARD - ROTATION -->

                </div>
            </section>

            <section id="dashboard-rotation-status" ng-show="haveCompany">
                <div class="panel highlight-container">
                    <div class="highlight-card">
                        <!-- HEADER -->
                        <div class="highlight-header">
                            <div class="container">
                                <div class="row vertical-align-row">
                                    <!--<div class="col-md-1">
            <button class="image-container-sm" ng-click="exportRotationListToCSV()">
                <span class="tooltiptext">export as csv</span>
                <img src="~/Images/icon/export-csv.png"/>
            </button>
        </div>-->
                                    <div class="col-md-1">
                                        <img style="border:1px solid black;height:75%;cursor:pointer;border-radius:50%;padding:2px" ng-click="exportAllRotationStatusToCSV()" title="Export All Rotation Status as CSV" src="~/Images/icon/download.png" />
                                    </div>
                                </div>
                                <div class="row ">
                                    <div class="col-sm-12">
                                        <label class="control-label">Tags Filter</label>
                                    </div>
                                    <div class="col-sm-12">
                                        <form>
                                            <input type="text" class="form-control" ng-model="$parent.newTag" ng-keyup="($event.keyCode == 13 || $event.keyCode == 188 ) && addTagList()" />
                                            <div style="color:black;font-size:10px;align-self:end">use comma or enter to add filter by tag</div>
                                        </form>
                                    </div>
                                </div>
                                <div class="row">
                                    <div class="col-md-12">
                                        <span class="tag-item" ng-repeat="tag in tags">
                                            {{tag}}
                                            <button class="image-container-sm red-border" ng-click="($event.keyCode != 13) && removeTag($index)">
                                                <img src="~/Images/icon/reject.png" />
                                            </button>
                                        </span>
                                    </div>
                                </div>
                                <div class="row vertical-align-row">
                                    <div class="col-md-7">
                                        <p class="card-title"><strong>Rotation Status</strong></p>
                                    </div>
                                    <div class="col-md-4 push-left">
                                        <!-- SELECT -->
                                        <select class="card-filter select-lg" ng-model="selectedCompany" ng-options="x.Name for x in companyOwned" ng-change="setSelectedCompany(selectedCompany)"></select>
                                    </div>
                                </div>
                            </div>
                        </div>

                        <!-- CONTENT -->
                        <div class="card-content" ng-show="showRotationStatus" >
                            <!-- each rotation status -->
                            <div class="container">
                                <table class="table-xxs table-borderless datatable-highlight dataTable no-footer" style="font-size:small;width:100%">
                                    <thead>
                                        <tr>
                                            <th style="width: 14%">Workflow Name</th>
                                            <th style="width: 14%">Name</th>
                                            <th style="width: 10%">Status</th>
                                            <th style="width: 7%">Created</th>
                                            <th style="width: 7%">Updated</th>
                                            <th style="width: 48%">Position Now</th>
                                        </tr>
                                    </thead>
                                    <tbody>
                                        <tr style="height:50px;vertical-align:central;" ng-repeat="y in listRotationStatus">
                                            <td>{{y.Workflow.Name}}</td>
                                            <td>{{y.Subject}} </td>
                                            <td>{{getStatusName(y.Status)}}</td>
                                            <td><span style="font-size:xx-small;color:darkblue">{{convertJsonDate(y.DateCreated) | date: 'dd/MM/yyyy HH:mm:ss'}}</span></td>
                                            <td><span style="font-size:xx-small;color:darkblue">{{convertJsonDate(y.DateUpdated) | date: 'dd/MM/yyyy HH:mm:ss'}}</span></td>
                                            <td>
                                                <span ng-repeat="usr in y.RotationUsers"><img title="{{(usr.Status == 0? 'ongoing' : (usr.Status == -99? 'waiting':'completed')) + ' - '+ usr.Name}}" height="30" width="30" style="padding:2px;{{(usr.Status == 0? ' border: 2px solid green' : (usr.Status == -99? 'filter: grayscale(100%)':'border: 1px solid black'))}};cursor:pointer;border-radius:50%;" src="/Images/Member/{{usr.EncryptedId}}/{{usr.ImageProfile}}" /></span>
                                            </td>
                                        </tr>
                                    </tbody>
                                </table>
                            </div>
                            <div class="pagination-container">
                                <div style="padding-bottom:20px;padding-top:20px"class="pagination">
                                    <a data-toggle="tooltip" title="first page" ng-click="getDashboardRotationStatusPage(1)">&lt;&lt;</a>
                                    <a data-toggle="tooltip" title="previous page" ng-click="getDashboardRotationStatusPage(pageRotationStatus - 1)">&lt;</a>
                                    <a ng-repeat="rtsp in rotationStatusPaging | limitTo : pageRotationStatus+3>rotationStatusPaging.length?rotationStatusPaging.length:pageRotationStatus+3 : pageRotationStatus-4<0?0:pageRotationStatus-4" ng-click="getDashboardRotationStatusPage(rtsp)" class="{{rtsp == pageRotationStatus ? 'active':''}}">
                                        {{rtsp}}
                                    </a>
                                    <a data-toggle="tooltip" title="next page" ng-click="getDashboardRotationStatusPage(pageRotationStatus + 1)">&gt;</a>
                                    <a data-toggle="tooltip" title="last page" ng-click="getDashboardRotationStatusPage(rotationStatusPaging.length)"> &gt; &gt;</a>
                                </div>
                            </div>
                        </div>

                    </div>
                </div>

            </section>
   
        </div>

        <script>
            
        </script>

        <script type="text/javascript">
        var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap']) //, 'ui.select2'])
        myApp.controller("drdController", function ($scope, $location, $http, $filter) {
            $scope.product = {};
            $scope.products = [];
            $scope.productCount = [];
            $scope.paging = [];
            $scope.kriteria = "";
            $scope.page = 1;
            $scope.row = 20;
            $scope.companyOwned = [];
            $scope.currPage = 0;
            $scope.isView = false;
            $scope.index = 0;
            initValues();
            $scope.dashboard = {};
            $scope.selectedCompany = "";

            $scope.tags = [];
            $scope.newTag = "";
            $scope.listRotationStatus = [];
            $scope.rotationStatusPaging = [];
            $scope.pageRotationStatus = 1;
            $scope.pageSizeRotationStatus = 10;
            $scope.hasPrevPage = false;
            $scope.hasNextPage = false;

            $scope.counter = {
                Old: { Inbox: 0, InProgress: 0, Pending: 0, Declined: 0, Completed: 0, Pending: 0, Altered: 0, Contact: 0, DrDriveDesc: '0GB', Document: 0 },
                New: { Inbox: 0, InProgress: 0, Pending: 0, Declined: 0, Completed: 0, Pending: 0, Altered: 0, Contact: 0, DrDriveDesc: '0GB', Document: 0 }
            };
            $scope.$on("$destroy", function (event) {
                clearInterval(xtimer);
            });
            $scope.notiftime = 5000;
            $scope.xtimer = 0;
            $scope.startCounting = function () {
                $scope.xtimer = setInterval(() => {
                    /*$scope.getActivityCounter();*/
                }, 5000);
            };
            /*--------------------------------------------------------------
            INIT DATA
            --------------------------------------------------------------*/
            function initValues() {
                $scope.dbmenus = @Html.Raw(Json.Encode(Model.dbmenus));
            }
            angular.element(document).ready(function () {
                $scope.getCompanyOwned();
                $scope.getActivityCounter();
                $("#content").show();
            });
            $scope.getActivityCounter = function () {
                $scope.products = [];
                $http.post('@Url.Action("GetActivityCounter", "Dashboard")', {}).then(function (response) {
                    if (response.data) {
                        $scope.counter = response.data;
                        var counter = response.data;
                        $.jGrowl.defaults.closer = false;
                        var val = counter.New.Inbox - counter.Old.Inbox;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' inbox', {
                                header: 'Inbox Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }
                        val = counter.New.InProgress - counter.Old.InProgress;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' in progress', {
                                header: 'In Progress Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }

                        val = counter.New.Signed - counter.Old.Signed;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' signed', {
                                header: 'Signed Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }
                        val = counter.New.Declined - counter.Old.Declined;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' declined', {
                                header: 'Declined Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-danger'
                            });
                        }
                        val = counter.New.Completed - counter.Old.Completed;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' completed', {
                                header: 'Completed Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }
                        val = counter.New.Altered - counter.Old.Altered;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' altered', {
                                header: 'Altered Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }
                        val = counter.New.Revised - counter.Old.Revised;
                        if (val > 0) {
                            $.jGrowl(val + ' item' + (val > 1 ? 's' : '') + ' revised', {
                                header: 'Revised Notification',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-info'
                            });
                        }
                        if (counter.New.DepositBalance != counter.Old.DepositBalance) {
                            $.jGrowl("DRD Point " + $filter('number')(counter.New.DepositBalance, 0), {
                                header: 'DRD Point ',
                                //sticky: true,
                                life: $scope.notiftime,
                                theme: 'alert-styled-right bg-success-400'
                            });
                        }
                    }
                    else {
                        clearInterval($scope.xtimer);
                        swal({
                            title: "Session expired!",
                            text: "The session has expired, the page will redirect to login. I will close in 10 seconds.",
                            confirmButtonColor: "#2196F3",
                            timer: 10000
                        }, function () {
                            swal.close();
                            location.href = "/Login";
                        });
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.getCompanyOwned = function () {
                $http.post('@Url.Action("GetAllCompanyOwnedbyUser", "Company")', {}).then(function (response) {
                    if (response.data) {
                        $scope.companyOwned = response.data.companies;
                        $scope.selectedCompany = $scope.companyOwned[0];
                        $scope.getDashboardRotationStatus();
                    }
                })
            }
            $scope.setSelectedCompany = function (x) {
                $scope.selectedCompany = x;
                $scope.getDashboardRotationStatus();
            }
            $scope.haveCompany = function () {
                return $scope.companyOwned.Count() > 0;
            }
            /*--------------------------------------------------------------
            CONVERT JSON DATE
            --------------------------------------------------------------*/
            $scope.convertJsonDate = function (val) {
                if (val == undefined)
                    return '';
                return new Date(parseInt(val.substr(6)));
            }
            /*--------------------------------------------------------------
            TAGGING SYSTEM FILTER
            --------------------------------------------------------------*/
            $scope.addTagList = function () {
                if($scope.newTag.charAt($scope.newTag.length - 1)==",") $scope.newTag = $scope.newTag.substring(0, $scope.newTag.length - 1);
                var alreadyUsed = false;
                if ($scope.newTag != '') {
                    $scope.tags.some(function (element, i) {
                        if ($scope.newTag.toLowerCase() === element.toLowerCase()) {
                            alreadyUsed = true;
                            return;
                        }
                    })
                    if (!alreadyUsed) {
                        $scope.tags.push($scope.newTag);
                    }
                }
                $scope.newTag = "";
                $scope.getDashboardRotationStatus();
            }
            $scope.removeTag = function (index) {
                $scope.tags.splice(index, 1);
            }
            /*--------------------------------------------------------------
            Dashboard Rotation Status
            --------------------------------------------------------------*/
            $scope.getDashboardRotationStatus = function () {
                $http.post('@Url.Action("GetDashboardRotationStatus", "Dashboard")',
                    { companyId: $scope.selectedCompany.Id, Tags: $scope.tags, page: $scope.pageRotationStatus, pageSize: $scope.pageSizeRotationStatus }
                ).then(function (response) {
                    if (response.data) {
                        $scope.listRotationStatus = response.data;
                        $scope.dashboardRotationStatusCountAll();
                    }
                }, function (response) {
                    //error handle\
                        var x = 0;
                });
            }
            $scope.dashboardRotationStatusCountAll = function () {
                $http.post('@Url.Action("DashboardRotationStatusCountAll","Dashboard")', { companyId: $scope.selectedCompany.Id, Tags: $scope.tags }).then(function (response) {
                    if (response.data) {
                        var jumlahData = response.data;
                        var jumlahPage = Math.ceil(jumlahData / $scope.pageSizeRotationStatus);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.rotationStatusPaging.push(i);
                        }
                        $scope.pageRotationStatus = 1;
                    }
                }, function (response) {
                    var x = 0;
                });
            }
            $scope.getDashboardRotationStatusPage = function (pageTarget) {
                if ((pageTarget > $scope.rotationStatusPaging.length||pageTarget > $scope.rotationStatusPaging.length)) { return; }
                $http.post('@Url.Action("GetDashboardRotationStatus", "Dashboard")',
                    { companyId: $scope.selectedCompany.Id, Tags: $scope.tags, page: pageTarget, pageSize: $scope.pageSizeRotationStatus }
                ).then(function (response) {
                    if (response.data) {
                        var saved = $scope.rotationStatusPaging; 
                        $scope.rotationStatusPaging = [];
                        $scope.rotationStatusPaging = saved;
                        $scope.listRotationStatus = response.data;
                        $scope.pageRotationStatus = pageTarget;
                    }
                }, function (response) {
                    //error handle\
                        var x = 0;
                });
            }
            $scope.showRotationStatus = function () {
                return $scope.listRotationStatus.Count() > 0
            }
            /*--------------------------------------------------------------
            CSV Handling
            --------------------------------------------------------------*/
            $scope.convertToCSV = function (objArray) {
                var array = typeof objArray !== 'object' ? JSON.parse(objArray) : objArray;
                var str = '';
                for (var i = 0; i < array.length; i++) {
                    var line = '';
                    for (var index in array[i]) {
                        if (line != '') {line += ',';}
                        if (typeof array[i][index] === 'object') {
                            var penggantiobj = array[i][index];
                            for (var index2 in penggantiobj) {
                                line += penggantiobj[index2];
                            }
                        } else {
                            line += array[i][index];
                        }
                    }
                    str += line + '\r\n';
                }
                return str;
            }
            $scope.exportCSVFile = function (headers, items, string, fileTitle) {
                if (headers) {
                    items.unshift(headers);
                }
                if (string == null) {
                    // Convert Object to JSON
                    var jsonObject = JSON.stringify(items);
                    var csv = $scope.convertToCSV(jsonObject);
                    var exportedFilename = fileTitle + '.csv' || 'export.csv';
                }
                else {
                    var csv = string;
                    var exportedFilename = fileTitle + '.csv' || 'export.csv';
                }
                var blob = new Blob([csv], { type: 'text/csv;' });
                if (navigator.msSaveBlob) { // IE 10+
                    navigator.msSaveBlob(blob, exportedFilename);
                } else {
                    var link = document.createElement("a");
                    if (link.download !== undefined) { // feature detection
                        // Browsers that support HTML5 download attribute
                        var url = URL.createObjectURL(blob);
                        link.setAttribute("href", url);
                        link.setAttribute("download", exportedFilename);
                        link.style.visibility = 'hidden';
                        document.body.appendChild(link);
                        link.click();
                        document.body.removeChild(link);
                    }
                }
            }
            $scope.exportRotationListToCSV = function () {
                var filename = $scope.tags.toString() + "_" + $scope.selectedCompany.Name + "_RotationStatus";
                $scope.exportCSVFile(null, $scope.listRotationStatus, null, filename);
            }

            // export to csv all the rotation status
            $scope.exportAllRotationStatusToCSV = function () {
                console.log("exporting csv");
                $http.post('@Url.Action("ExportAllRotationStatusToCSV", "Dashboard")',
                    { companyId: $scope.selectedCompany.Id, companyName: $scope.selectedCompany.Name }
                ).then(function (response) {
                    var filename = $scope.selectedCompany.Name + "_AllRotationStatus";
                    console.log(response.data)
                    $scope.exportCSVFile(null, $scope.listRotationStatus, response.data, filename);
                }, function (response) {
                        //error handle
                        console.log(response);
                    }
                );
            }

            // Belum digunakan
            $scope.sendEmailNotifikasiRotasi = function (index) {
                $http.post('@Url.Action("sendEmailNotifikasiRotasi","Dashboard")', {}).then(function (response) {
                    if (response.data) {
                    } else {
                    }
                }, function (response) {
                });
            }

            $scope.getStatusName = function (status) {
                switch (status) {
                    case 0:
                        return "Open";
                        break;
                    case 1:
                        return "In Progress";
                        break;
                    case 2:
                        return "Pending";
                        break;
                    case 3:
                        return "Signed";
                        break;
                    case 5:
                        return "Revision";
                        break;
                    case 6:
                        return "Altered";
                        break;
                    case 90:
                        return "Completed";
                        break;
                    case 98:
                        return "Declined";
                        break;
                    case 99:
                        return "Canceled";
                        break;
                    case 10:
                        return "Waiting_For_Response";
                        break;
                    case 11:
                        return "Accepted";
                        break;
                    case 97:
                        return "Expired";
                        break;

                }
            };

            // belum dipake gue rasa
            $scope.linkPage = function (name) {
                var url=$filter('filter')($scope.dbmenus,{SecondaryKey:name})[0].UrlPage;
                location.href=url;
            }
            /*--------------------------------------------------------------
            DO EDIT ROTATION
            --------------------------------------------------------------*/
            $scope.getProductCount = function (kriteria) {
                $http.post('@Url.Action("GetListCount", "Rotation")', { topCriteria: kriteria }).then(function (response) {
                    if (response.data) {
                        var jumlahData = response.data;
                        var jumlahPage = Math.ceil(jumlahData / $scope.row);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push({ value: i, text: i });
                        }
                        $scope.page = "1";
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }


            /*--------------------------------------------------------------
            GENERAL FUNCTION
            --------------------------------------------------------------*/
        });
        $(function () {
        });
        $(document).ready(function () {
        });
        </script>

    </body>
@model DRD.Models.View.Layout
@{
    ViewBag.Title = "Rotation";
    ViewBag.Submenu = "ROTATION";

}
@section Scripts
{
    <script src="~/Scripts/xpublic.js"></script>
}
@section Styles
{
}

<body>
    <h4><a class="btn" href="/rotation/list" style="border-radius:15px;text-align:center;padding:5px;margin-left:20px;font-weight:800;background-color:#5D90AE;color:white;"><i class="icon-infinite"></i></a> @ViewBag.Title</h4>
    <section ng-controller="drdController">
        <!-- Content area -->
        <div class="content" style="display:none">
            <!-- Contextual classes -->
            <div class="row">
                <div class="col-sm-12 col-md-4" style="margin-bottom:20px">
                    <div class="input-group">
                        <input type="text" class="form-control" ng-model="criteria" placeholder="Search" style="height:50px" ng-keyup="$event.keyCode ==  13 && getRotations(criteria, page, totalItemPerPage)">
                        <span class="input-group-btn">
                            <button id="my-button" class="btn btn-default btn-ladda btn-process" type="button" data-style="slide-down" data-spinner-color="#333" ng-click="getRotations(criteria, page, totalItemPerPage)" style="background-color:#075685; color:white; width:50px;height:50px">
                                <span class="ladda-label"><i class="icon-search4"></i></span><span class="ladda-spinner"></span>
                                <div class="ladda-progress" style="width: 0px;"></div>
                            </button>
                        </span>
                    </div>
                </div>
                <div class="col-md-6">
                    <div class="">
                        <button class="btn btn-flat" style="background-color:#075685; color:white; width:100px;height:50px" data-toggle="tooltip" title="create new rotation" ng-click="addrotation()">
                            <i class="icon-plus2"></i> Add
                        </button>
                    </div>
                </div>
            </div>
            <div style="height:10px" ng-init="getRotations(criteria, page, totalItemPerPage)"></div>
            <!-- LIST -->
            <div calss="row">
                <div class="panel panel-flat">
                    <div ng-show="!hasRotation" style="text-align:center;padding:50px;">
                        You don't have a rotation yet or there is no match rotation with the search criteria.
                    </div>
                    <div class="table-responsive" ng-show="isView && hasRotation">
                        <table class="table-xxs table-borderless table-hover datatable-highlight dataTable no-footer" style="font-size:small;width:100%">
                            <thead>
                                <tr>
                                    <th>Name</th>
                                    <th width="100px">Company</th>
                                    <th>Workflow</th>
                                    <th width="100px">Status</th>
                                    <th width="175px">Created</th>
                                </tr>
                            </thead>
                            <tbody>
                                <tr style="cursor:pointer;height:50px;vertical-align:central;" ng-repeat="x in rotations">
                                    <td width="30%" ng-click="goToDetailPage(x.Id);">{{x.Name}}</td>
                                    <td width="30%" ng-click="goToDetailPage(x.Id);">
                                       {{x.CompanyRotation.Name ==  ""?"-":x.CompanyRotation.Name }}
                                    </td>
                                    <td width="10%" ng-click="goToDetailPage(x.Id);">{{x.WorkflowName}}</td>

                                    <td width="10%"><a style="width:100%" ng-click="goToDetailPage(x.Id);">{{x.StatusDescription }} <span style="font-size:xx-small;color:darkblue">{{convertJsonDate(x.DateStatus  ) | date: 'dd/MM/yyyy HH:mm:ss'}}</span></a></td>
                                    <td width="10%" ng-click="goToDetailPage(x.Id);"  style="font-size:10px">{{x.CreatedAt}}</td>
                                    <td width="10%">
                                        <a style="width:100%" class="btn btn-drd-1" ng-click="showSubscription(x.Id);" ng-show="x.Status=='00'">Start</a>
                                    </td>
                                </tr>
                            </tbody>
                        </table>
                    </div>
                    <div ng-show="hasRotation" class="pagination-container">
                        <div class="pagination">
                            <a class="{{page > 1?'':'disable'}}" data-toggle="tooltip" title="first page"
                               ng-click="page > 1 && changePageRotations(criteria, 1, totalItemPerPage)">&lt;&lt;</a>
                            <a class="{{page > 1?'':'disable'}}" data-toggle="tooltip" title="previous page"
                               ng-click="page > 1 && changePageRotations(criteria, page - 1, totalItemPerPage)">&lt;</a>
                            <a class="{{rot == page ? 'active':''}}" ng-repeat="rot in paging | limitTo : page+3>paging.length?paging.length:page+3 : page-4<0?0:page-4"
                               ng-click="changePageRotations(criteria, rot, totalItemPerPage)">
                                {{rot}}
                            </a>
                            <a class="{{page < paging.length?'':'disable'}}" data-toggle="tooltip" title="next page"
                               ng-click="page < paging.length && changePageRotations(criteria, page + 1, totalItemPerPage)">&gt;</a>
                            <a class="{{page < paging.length?'':'disable'}}" data-toggle="tooltip" title="last page"
                               ng-click="page < paging.length && changePageRotations(criteria, paging.length, totalItemPerPage)"> &gt; &gt;</a>
                        </div>
                    </div>
                </div>
            </div>
            <!-- /LIST -->
            <ng-include src="'/Include/PopupSubscription'"></ng-include>
        </div>
        <!-- /content area -->
    </section>
    <script type="text/javascript">

        var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap']) 
        myApp.controller("drdController", function ($scope, $location, $http, $filter) {
            $scope.rotation = {};
            $scope.rotations = [];
            $scope.rotationCount = [];
            $scope.paging = [];
            $scope.criteria = "";
            $scope.page = 1;
            $scope.totalItemPerPage = 20;
            $scope.currPage = 0;
            $scope.isView = false;
            $scope.index = 0;
            $scope.rotationSelected = -1
            $scope.SubscriptionList = [];
            $scope.hasRotation = false;

            /*--------------------------------------------------------------
            INIT DATA
            --------------------------------------------------------------*/

            angular.element(document).ready(function () {
                $scope.getSubscriptionList();

                $(".content").show();
            });

            /*--------------------------------------------------------------
            DO EDIT
            --------------------------------------------------------------*/

            $scope.goToDetailPage = function (id) {
                location.href = "/Rotation?id=" + id;
            }
            $scope.addrotation = function (mid) {
                location.href = "/Rotation/New";
            }
            $scope.checkFlag = function (val, bitval) {
                return ((val & bitval) == bitval);
            }
            $scope.runLog = function (status, id) {
                var code='';
                if (status=='01')
                    code='INPROGRESS';
                else if (status=='98')
                    code='DECLINED';
                else if (status=='90')
                    code='COMPLETED';

                var url=$filter('filter')($scope.dbmenus,{SecondaryKey:code})[0].UrlPage.replace('list?','?')+','+id;
                location.href = url;
            }


            $scope.showSubscription = function (rotationSelected) {
                $scope.rotationSelected = rotationSelected;
                $("#modal_select_subscription").modal("show");
            }

            $scope.getSubscriptionList = function () {
                $http.get('@Url.Action("GetSubscriptionList", "Subscription")')
                    .then(function (response) {
                        if (response.data) {
                            $scope.SubscriptionList = response.data.usages;
                        }
                    });
            }

             $scope.setSubscription = function (idx) {
                $scope.CompanyList[$scope.companyIndex].SubscriptionId = $scope.SubscriptionList[idx].Id;
                $scope.CompanyList[$scope.companyIndex].SubscriptionName = $scope.SubscriptionList[idx].Name;
            }

            $scope.do_start = function (id) {
                swal({
                    title: "Confirmation",
                    text: "Are you sure to start this rotation with \n" + $scope.SubscriptionList[id].SubscriptionName + " - " + $scope.SubscriptionList[id].CompanyName + " subscription?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true
                },
                function () {
                    setTimeout(function () {
                        $scope.startrotation($scope.SubscriptionList[id].Id);
                    }, 500);

                });
            }

            $scope.startrotation = function (id) {
                $http.post("/Rotation/start?rotationId=" + $scope.rotationSelected + "&subscriptionId=" + id,
                    {
                    }).then(function (response) {

                        if (response.data) {
                            if (response.data.status == "OK") {
                                showSuccess("Successful data process.");
                                $scope.getRotations($scope.criteria, $scope.page, $scope.totalItemPerPage);
                            }
                            else if (response.data.status == "ERROR_WORKFLOW_START_NODE_NOT_FOUND")
                                showError("You use an invalid workflow. Make another rotation with valid worfklow.");
                            else if (response.data.status == "ERROR_ROTATION_ALREADY_STARTED") {
                                showError("Rotation already started");
                                $scope.getRotations($scope.criteria, $scope.page, $scope.totalItemPerPage);
                            }
                            else if (response.data.status == "ADMINISTRATOR_EXCEED_LIMIT")
                                showError("The number of administrators exceed limit, upgrade your subscription");
                            else if (response.data.status == "MEMBER_EXCEED_LIMIT")
                                showError("The number of members in this company exceed limit, upgrade your subscription");
                            else if (response.data.status == "ROTATION_STARTED_EXCEED_LIMIT")
                                showError("The number of rotation using this subscription is exceeding the limit, upgrade your subscription");
                            else if (response.data.status == "NO_ACTIVE_PLAN")
                                showError("this subscription is invalid");
                            else if (response.data.status == "NOT_AUTHORIZED")
                                showError("You are not authorized to use this subscription");
                            else if (response.data.status == "EXPIRED")
                                showError("This subscription is expired. Buy new subscription");
                            else if (response.data.status == "STORAGE_EXCEED_LIMIT")
                                showError("The storage is full, upgrade your subscription");
                            else {
                                
                            }
                        } else
                            showInfo("process data error.");
                    }, function (response) {
                        //error handle\
                        var x = 0;
                        showInfo("process data error.");
                    });
            }
            /*--------------------------------------------------------------
            GET ASSET ITEM
            --------------------------------------------------------------*/
            $scope.getRotations = function (criteria, page, totalItemPerPage) {
                var btn = Ladda.create(document.querySelector('.btn-process'));
                btn.start();
                $scope.rotations = [];
                $http.post('@Url.Action("GetRotations", "Rotation")', { criteria: criteria, page: page, totalItemPerPage: totalItemPerPage }).then(function (response) {
                    btn.stop();
                    if (response.data) {
                        $scope.rotations = response.data;
                        $scope.index = totalItemPerPage * (page - 1);
                        $scope.page = "1";
                        $scope.isView = true;
                        $scope.getRotationsCountAll(criteria);
                        $scope.rotations.forEach(
                            function (item) {
                                item.CreatedAt = $scope.getDateFormated(item.CreatedAt,1);
                            }
                        );
                    }
                    $scope.hasRotation = $scope.rotations.length > 0;
                }, function (response) {
                    //error handle\
                    btn.stop();
                    var x = 0;
                });
            }
            $scope.getRotationsCountAll = function (criteria) {
                $http.post('@Url.Action("CountRotations", "Rotation")', { criteria: criteria }).then(function (response) {
                    if (response.data) {
                        $scope.paging = [];
                        var jumlahData = response.data;
                        var jumlahPage = Math.ceil(jumlahData / $scope.totalItemPerPage);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push(i);
                        }
                        $scope.page = "1";
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }
            $scope.changePageRotations = function (criteria, page, totalItemPerPage) {
                if ((page > $scope.paging.length || page < 1)) { return; }
                $scope.rotations = [];
                $http.post('@Url.Action("GetRotations", "Rotation")', { criteria: criteria, page: page, pageSize: totalItemPerPage }).then(function (response) {
                    if (response.data) {
                        $scope.rotations = response.data;
                        $scope.index = totalItemPerPage * (page - 1);
                        $scope.rotations.forEach(
                            function (item) {
                                item.CreatedAt = moment(item.CreatedAt).fromNow();
                            }
                        );
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }        
        });
        $(function () {
        });
        $(document).ready(function () {

            $('.radio-group .radio').click(function () {
                $(this).parent().find('.radio').removeClass('selected');
                $(this).addClass('selected');
                var val = $(this).attr('data-value');
                $(this).parent().find('input').val(val);
            });

        });
    </script>

</body>
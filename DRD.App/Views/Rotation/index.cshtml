@model DRD.Models.View.Layout
@{
    ViewBag.Title = "Rotation Detail";
    ViewBag.Submenu = "ROTATION";

    if (!Model.isLayout)
    {
        Layout = null;
    }
}
@section Scripts
{
    <script src="/assets/js/plugins/buttons/spin.min.js" type="text/javascript"></script>
    <script src="/assets/js/plugins/buttons/ladda.min.js" type="text/javascript"></script>
    <script src="/assets/js/pages/components_buttons.js" type="text/javascript"></script>

    <script src="/assets/vendors/angular-1.5.5/angular.js"></script>
    <script src="/assets/vendors/angular-1.5.5/angular-animate.js"></script>
    <script src="/Scripts/ui-bootstrap-tpls-1.3.2.js"></script>

    <script src="/assets/vendors/file-upload/ng-file-upload-shim.min.js"></script> <!-- for no html5 browsers support -->
    <script src="/assets/vendors/file-upload/ng-file-upload.min.js"></script>
    <script src="/assets/vendors/ng_only_number.js"></script>

    <link href="/assets/vendors/bootstrap-switch/bootstrap3/bootstrap-switch.css" rel="stylesheet" type="text/css" />
    <script src="/assets/vendors/bootstrap-switch/bootstrap-switch.js"></script>

    <script type="text/javascript" src="/assets/js/plugins/forms/styling/uniform.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/forms/styling/switchery.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/forms/styling/switch.min.js"></script>

    <script type="text/javascript" src="/assets/js/plugins/notifications/bootbox.min.js"></script>
    <script type="text/javascript" src="/assets/js/plugins/notifications/sweet_alert.min.js"></script>

    <script src="~/Scripts/xpublic.js"></script>
}

@section Styles
{
    <link href="/assets/css/pages/rotation.css" rel="stylesheet" type="text/css">
}

<body @*ng-app="drdApp"*@>
    <!-- Page container -->
    <div class="page-container" ng-controller="drdController">
        <!-- Page content -->
        <div class="page-content">
            <!-- Main content -->
            <div class="content-wrapper">
                <!-- Page header -->
                <h4>Rotation Detail - {{model.Subject}}</h4>
                <!-- /page header -->
                <!-- Horizontal form options -->
                <!-- Content area -->
                <div class="content" style="display:none">
                    <!-- Basic layout-->
                    <div class="panel panel-flat">
                        <div class="panel-body">
                            <!--MEMBER DATA-->
                            <form name="myForm" class="form-horizontal" autocomplete="off">
                                <div ng-show="wizarno=='product'">
                                    <fieldset>
                                        <div class="col-md-12">
                                            <div class="row">
                                                <div class="col-md-6">
                                                    <label class="control-label">Name</label>
                                                    <input type="text" class="form-control" ng-model="model.Subject" ng-required="wizarno=='product'" maxlength="100" />
                                                </div>
                                                <div class="col-md-6">
                                                    <label class="control-label">Workflow</label>
                                                    <div class="input-group">
                                                        <div>
                                                            <input type="text" class="form-control" ng-model="workflow.Name" maxlength="50" readonly />
                                                        </div>
                                                        <span class="input-group-addon" style="cursor:pointer" ng-click="popupWorkflow()"><i class="icon-cogs"></i></span>
                                                    </div>

                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <label class="control-label">Description</label><br />
                                                    <textarea class="control-label" ng-model="model.Remark" rows="3" style="resize: none; overflow-y: hidden; opacity: 0.8; height: 100px;width:100%"></textarea>
                                                </div>
                                            </div>
                                            <div class="row">
                                                <div class="col-md-12">
                                                    <div class="row">
                                                        <div class="col-sm-12">
                                                            <label class="control-label">Tags</label>
                                                        </div>
                                                        <div class="col-sm-12">
                                                            <input type="text" class="form-control" ng-model="newTag" ng-keyup="$event.keyCode == 188 && addTagList()" />
                                                        </div>
                                                        <div class="col-sm-12">
                                                            <div style="color:black;font-size:10px;align-self:end">use coma to use the tag you type</div>
                                                        </div>
                                                    </div>
                                                    <div class="row">
                                                        <span class="tag-item" ng-repeat="tag in model.Tags">
                                                            {{tag}}
                                                            <button class="image-container-sm red-border" ng-click="removeTag($index)">
                                                                <img src="~/Images/icon/reject.png" />
                                                            </button>
                                                        </span>
                                                    </div>
                                                </div>
                                            </div>
                                            <hr />
                                            <div style="height:5px"></div>
                                            <div class="col-md-12">
                                                <div class="row">
                                                    <label class="control-label">Workflow Process</label>
                                                    <table class="table-xxs table-bordered table-striped" style="font-size:small;width:100%">
                                                        <thead>
                                                            <tr>
                                                                <th width="25px">#</th>
                                                                <th>Activity</th>
                                                                <th>Recipient</th>
                                                            </tr>
                                                        </thead>
                                                        <tbody ng-repeat="x in users" ng-init="topIdx = $index">
                                                            <tr style="vertical-align:top" on-finish-render="ngRepeatFinished">
                                                                <td width="25px" rowspan="2">{{$index+1 + index}}</td>
                                                                <td rowspan="2">{{x.ActivityName}}</td>
                                                                <td>
                                                                    <table style="width:100%;">
                                                                        <tr>
                                                                            <td style="width:50px;">
                                                                                <img ng-src="/Images/Member/{{x.Picture}}" height="40" width="40" style="cursor:pointer;border-radius:10%;" ng-click="editMember($index)" />
                                                                            </td>
                                                                            <td style="font-size:xx-small">
                                                                                <span class="text-format">{{x.Number}}</span><br />
                                                                                <span class="text-format">{{x.Name}}</span><br />
                                                                                <span class="text-format">{{x.Email}}</span><br />
                                                                            </td>
                                                                        </tr>

                                                                    </table>
                                                                </td>
                                                            </tr>
                                                            <tr>
                                                                <td style="font-size:xx-small">
                                                                    <span style="font-size:small;color:brown">Permission :&ensp;</span>
                                                                    <input type="checkbox" class="control-primary" ng-checked="{{getFlagPermission(x.FlagPermission, 8)}}" id="checkboxmt{{x.WorkflowNodeId}}-8"> Print&ensp;&ensp;&ensp;
                                                                    <input type="checkbox" class="control-success" ng-checked="{{getFlagPermission(x.FlagPermission, 16)}}" id="checkboxmt{{x.WorkflowNodeId}}-16"> Download
                                                                </td>
                                                            </tr>
                                                        </tbody>
                                                    </table>
                                                </div>
                                            </div>
                                        </div>
                                    </fieldset>
                                    <div ng-show="model.Status==0">
                                        <hr />
                                        <div class="col-md-12">

                                            <div class="col-md-12">

                                                <div class="text-right">
                                                    <span class="input-group-btn">
                                                        <button class="btn bg-slate-700 pull-right btn-ladda btn-submit" data-style="slide-down" data-spinner-color="#333" ng-click="showSubscription()" style="width:120px;margin-left:10px">
                                                            <span class="ladda-label">&nbsp;&nbsp;Start&nbsp;&nbsp;</span><span class="ladda-spinner"></span>
                                                            <div class="ladda-progress" style="width: 0px;"></div>
                                                        </button>

                                                        <button class="btn bg-slate-700 pull-right btn-ladda btn-submit" data-style="slide-down" data-spinner-color="#333" ng-click="updateProduct()" style="width:120px">
                                                            <span class="ladda-label">&nbsp;&nbsp;Save&nbsp;&nbsp;</span><span class="ladda-spinner"></span>
                                                            <div class="ladda-progress" style="width: 0px;"></div>
                                                        </button>
                                                    </span>
                                                </div>

                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </form>
                            <!--/MEMBER DATA-->
                            <!--CONFIRMATION THANK YOU-->
                            <div ng-show="wizarno=='success'">
                                <div class="col-md-12">

                                    <div class="alert alert-success alert-styled-left">
                                        Data successfully saved. Click <a href='' ng-click="startProduct()">here</a> to start with the rotation process.
                                    </div>
                                </div>
                            </div>
                            <div ng-show="wizarno=='started'">
                                <div class="col-md-12">
                                    <div class="alert alert-success alert-styled-left">
                                        Data successfully started.
                                    </div>
                                </div>
                            </div>
                            <!--/CONFIRMATION THANK YOU-->
                            <!-- View member modal -->
                            <ng-include src="'/Include/PopupWorkflow'"></ng-include>
                            <ng-include src="'/Include/PopupMember'"></ng-include>
                            <ng-include src="'/Include/PopupSubscription'"></ng-include>
                            <!-- View member modal -->
                        </div>
                    </div>
                    <!-- /basic layout -->
                </div>
                <!-- /vertical form options -->
            </div>
            <!-- /Main content -->
        </div>
        <!-- /Page content -->
    </div>
    <!-- /Page container -->

    <script type="text/javascript">


        var myApp = angular.module('drdApp', ['ngAnimate', 'ui.bootstrap', 'ngFileUpload', 'ngOnlyNumberApp'])
        myApp.directive('onFinishRender', function ($timeout) {
            return {
                restrict: 'A',
                link: function (scope, element, attr) {
                    if (scope.$last === true) {
                        $timeout(function () {
                            scope.$emit('ngRepeatBindRoutesFinished');
                        });
                    }
                }
            }
        });
        myApp.controller("drdController", function ($scope, Upload, $location, $http, $filter) {

            // modal workflow
            $scope.workflow = {};
            $scope.workflows = [];
            $scope.workflowCount = [];
            $scope.paging = [];
            $scope.kriteria = "";
            $scope.page = 1;
            $scope.row = 20;
            $scope.currPage = 0;
            $scope.index = 0;
            $scope.newTag = "";
            // modal workflow


            $scope.model = {};
            $scope.subscriptions = [];
            $scope.wizarno = 'product';
            $scope.master = {};
            $scope.model.IsActive=true;
            $scope.model.Status="00";
            $scope.users = [];
            $scope.SubscriptionList = [];
            initValues();

            $(".control-warning").uniform({
                radioClass: 'choice',
                wrapperClass: 'border-warning-600 text-warning-800'
            });

            $scope.$on('ngRepeatBindRoutesFinished', function (ngRepeatFinishedEvent) {
                $(".control-primary").uniform({
                    radioClass: 'choice',
                    wrapperClass: 'border-primary-600 text-primary-800'
                });
                $(".control-success").uniform({
                    radioClass: 'choice',
                    wrapperClass: 'border-success-600 text-success-800'
                });
            });

            /*--------------------------------------------------------------
            INIT DATA
            --------------------------------------------------------------*/
            angular.element(document).ready(function () {
                $(".content").show();
                $scope.getSubscriptionList();
            });

            function initValues() {
                var product = @Html.Raw(Json.Encode(Model.obj));
                $scope.dbmenus = @Html.Raw(Json.Encode(Model.dbmenus));
                if (product.Id!=0 ){
                    $scope.model.Id=product.Id;
                    $scope.model.Subject=product.Subject;
                    $scope.model.Status=product.Status;
                    $scope.model.Remark= product.Remark;
                    $scope.workflow=product.Workflow;
                    $scope.users = product.RotationUsers;
                    $scope.model.Tags = product.Tags;
                    console.log("THIS IS PRODUCT :: " + product);
                    console.log("THIS IS Users :: " + $scope.users);
                }else{

                }

                $('#checkbox1').bootstrapSwitch.defaults.size='mini';
            }

            $scope.initData = function () {

            }
            $scope.gotoWf = function () {
                var url=$filter('filter')($scope.dbmenus,{SecondaryKey:'WORKFLOW'})[0].UrlPage.replace('list?','?');
                location.href = url;
            }

            $scope.getFlagPermission = function (val, bit) {
                //var reult="";
                //if ((val & bit)==bit)
                //    result="√";
                return ((val & bit)==bit);
            };
            /*--------------------------------------------------------------
            SAVE PRODUCT
            --------------------------------------------------------------*/
            $scope.saveProduct = function () {
                for(i = 0; i < $scope.users.length; i++){
                    var bit = 1;
                    var flag = 39; ///artinya sudah bisa view, sign, stamp, add annotation
                    for (x = 1; x < 6; x++) {
                        var cb = $('#checkboxmt' + $scope.users[i].WorkflowNodeId + "-" + bit)[0];
                        if (typeof cb !== 'undefined') {
                            if (cb.checked)
                                flag += bit;
                        }
                        bit += bit;
                    }
                    $scope.users[i].FlagPermission = flag;
                }
                var btn = Ladda.create(document.querySelector('.btn-submit'));
                btn.start();
                $http.post('@Url.Action("Save", "Rotation")',
                    {
                        prod: {
                            Id: $scope.model.Id,
                            Subject: $scope.model.Subject,
                            Remark: $scope.model.Remark,
                            WorkflowId:$scope.workflow.Id,
                            Status: "00",
                            RotationUsers: $scope.users,
                            Tags: $scope.model.Tags,
                            //IsActive: $('#checkbox1')[0].checked,
                        }
                    }).then(function (response) {
                        btn.stop();
                        if (response.data) {
                            $scope.wizarno = 'success';
                            $scope.model.Id = response.data;
                            $scope.getSubscriptionList();
                        }
                    }, function (response) {
                        //error handle
                        console.log("Good")
                        btn.stop();
                        var x = 0;
                    });
            }

            $scope.updateProduct = function () {
                if (!$scope.isValidForm($scope.myForm))
                    return;

                if ($scope.workflow.Name==undefined) {
                    showInfo("Required workflow");
                    return;
                }

                if ($scope.users==null || $scope.users.length==0) {
                    showInfo("Recipient determination is empty");
                    return;
                }

                var isvalid=true;
                for (i = 0; i < $scope.users.length; i++){
                    if ($scope.users[i].UserId == null) {
                        isvalid=false;
                        break;
                    }
                }

                if (!isvalid) {
                    showInfo("There is an undefined recipient");
                    return;
                }

                $scope.saveProduct();
            }

            $scope.isValidForm = function (theForm) {
                var isvalid = theForm.$valid;
                return isvalid;
            };

            $scope.scrollingPage = function (id) {
                $('html, body').animate({
                    scrollTop: $(id).offset().top
                }, 200);
            }

            /*--------------------------------------------------------------
                POPUP WORKFLOW
            --------------------------------------------------------------*/
            $scope.popupWorkflow = function () {
                if ($scope.model.Status!='00'){
                    showInfo("Workflow data can not be changed.");
                    return;
                }
                $scope.workflows=[];
                $("#modal_select_workflow").modal("show");


            }
            $scope.setWorkflow = function (idx) {
                $scope.workflow=$scope.workflows[idx];
                $scope.getUsersWorkflow($scope.workflow.Id);
            }

            $scope.getUsersWorkflow = function (id) {
                $getLiteMembers = [];
                $http.post('@Url.Action("GetUsersWorkflow", "rotation")', { id: id }).then(function (response) {
                    if (response.data) {
                        $scope.users = response.data;
                        for(i=0;i<$scope.users.length;i++){
                            $scope.users[i].Documents=[];
                        }
                    }

                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.findWorkflows = function (kriteria, page, row) {
                $scope.workflows = [];
                $http.post('@Url.Action("FindWorkflows", "Workflow")', { topCriteria: kriteria, page: page, pageSize: row}).then(function (response) {
                    if (response.data) {
                        $scope.workflows = response.data.Items;

                        $scope.index = row * (page - 1);

                        $scope.paging = [];
                        var jumlahData = response.data.Count;
                        var jumlahPage = Math.ceil(jumlahData / $scope.row);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push({ value: i, text: i });
                        }
                        $scope.page = "1";
                        $scope.isView = true;
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.changePageWorkflows = function (kriteria, page, row) {
                $scope.products = [];
                $http.post('@Url.Action("FindWorkflows", "Workflow")', { topCriteria: kriteria, page: page, pageSize: row}).then(function (response) {
                    if (response.data) {
                        $scope.workflows = response.data.Items;
                        $scope.index = row * (page - 1);
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }
            /*--------------------------------------------------------------
                END POPUP WORKFLOW
            --------------------------------------------------------------*/

            /*--------------------------------------------------------------
                POPUP MEMBER
            --------------------------------------------------------------*/
            $scope.memberIdx=-1;
            $scope.editMember = function (idx) {
                $scope.memberIdx=idx;
                $scope.members = [];
                $("#modal_select_member").modal("show");
            }

            $scope.setMember = function (idx) {
                $scope.users[$scope.memberIdx].UserId=$scope.members[idx].Id;
                $scope.users[$scope.memberIdx].Name=$scope.members[idx].Name;
                $scope.users[$scope.memberIdx].Email=$scope.members[idx].Email;
                $scope.users[$scope.memberIdx].Picture = $scope.members[idx].ImageProfile;
            }

            $scope.findMembers = function (kriteria, page, row) {
                $scope.members = [];
                $http.post('/Member/FindMembers', { topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                    if (response.data) {
                        $scope.members = response.data.Items;
                        $scope.index = row * (page - 1);
                        $scope.paging = [];
                        var jumlahData = response.data.Count;
                        var jumlahPage = Math.ceil(jumlahData / $scope.row);
                        for (var i = 1; i <= jumlahPage; i++) {
                            $scope.paging.push({ value: i, text: i });
                        }
                        $scope.page = "1";
                        $scope.isView = true;
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }

            $scope.changePageMember = function (kriteria, page, row) {
                $scope.products = [];
                $http.post('/Member/FindMembers', { topCriteria: kriteria, page: page, pageSize: row }).then(function (response) {
                    if (response.data) {
                        $scope.members = response.data;
                        $scope.index = row * (page - 1);
                    }
                }, function (response) {
                    //error handle\
                    var x = 0;
                });
            }


            /*--------------------------------------------------------------
                END POPUP MEMBER
            --------------------------------------------------------------*/

            $scope.showSubscription = function () {
                console.log("idx : " + $scope.model.Id);
                $("#modal_select_subscription").modal("show");
            }
            $scope.do_start = function (id) {
                swal({
                    title: "Confirmation",
                    text: "Are you sure to start this rotation with \n" + $scope.SubscriptionList[id].SubscriptionName + " - " + $scope.SubscriptionList[id].CompanyName + " subscription?",
                    type: "warning",
                    showCancelButton: true,
                    closeOnConfirm: false,
                    confirmButtonColor: "#2196F3",
                    showLoaderOnConfirm: true
                },
                function () {
                    setTimeout(function () {
                        $scope.startProduct($scope.SubscriptionList[id].Id);
                    }, 500);

                });
            }
            $scope.startProduct = function (id) {
                var rotationId = $scope.model.Id;
                console.log(rotationId, id);
                $http.post("/Rotation/start?rotationId=" + rotationId + "&subscriptionId=" + id,
                    {
                    }).then(function (response) {
                        if (response.data) {
                            if (response.data == -1)
                                showError("Invalid rotation.");
                            else if (response.data == -2)
                                showError("Invalid member plan.");
                            else if (response.data == -3)
                                showInfo("Your package plan has expired, please check on my plan.");
                            else if (response.data == -4)
                                showInfo("Rotation quota is not enough, please check on my plan.");
                            else if (response.data == -5)
                                showInfo("Workflow doesnt has start node");
                            else {
                                $scope.wizarno = 'started';
                                showSuccess("Successful data process.");
                            }
                        } else
                            showInfo("process data error.");
                    }, function (response) {
                        console.log(response);
                        //error handle\
                        var x = 0;
                        showInfo("process data error.");
                    });
            }

            $scope.getSubscriptionList = function () {
                $http.get('@Url.Action("GetSubscriptionList", "Subscription")')
                    .then(function (response) {
                        if (response.data) {
                            $scope.SubscriptionList = response.data.subscriptions;
                        }
                    });
            }
            $scope.addTagList = function () {
                $scope.newTag = $scope.newTag.substring(0, $scope.newTag.length - 1);
                var alreadyUsed = false;
                $scope.model.Tags.some(function (element, i) {
                    if ($scope.newTag.toLowerCase() === element.toLowerCase()) {
                        alreadyUsed = true;
                        return;
                    }
                })
                if (!alreadyUsed) {
                    $scope.model.Tags.push($scope.newTag);
                }
                $scope.newTag = "";
            }
            $scope.removeTag = function (index) {
                $scope.model.Tags.splice(index, 1);
            }
        });

        $(function () {
        });


        $(document).ready(function () {
            $('#checkbox1').bootstrapSwitch.defaults.size='mini';
        })

    </script>
</body>